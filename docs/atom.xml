<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title></title>
    <link rel="self" type="application/atom+xml" href="https://ypark.github.io/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://ypark.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-09-03T00:00:00+00:00</updated>
    <id>https://ypark.github.io/atom.xml</id>
    <entry xml:lang="en">
        <title>STAT 548 PhD Qualifying Papers</title>
        <published>2024-09-03T00:00:00+00:00</published>
        <updated>2024-09-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/stat548-2024/"/>
        <id>https://ypark.github.io/posts/stat548-2024/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/stat548-2024/">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;Introduction&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I am interested in almost all problems in computational biology and genomics. I expect a student to propose novel statistical approaches that can address challenges in data analysis and modelling of high-dimensional, large-volume biological problems.&lt;&#x2F;p&gt;
&lt;p&gt;Feel free to contact me (&lt;code&gt;ypp@stat.ubc.ca&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;format&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#format&quot; aria-label=&quot;Anchor link for: format&quot;&gt;Format&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;You may organize your report including the following sections.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Problem definition&lt;&#x2F;strong&gt; (1 page): Extract mathematical&#x2F;statistical problems from the paper and organize them. What are the input data? What is the expected output?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Significance&lt;&#x2F;strong&gt; (1 paragraph): Why is this an interesting problem? What can be learned by studying this problem? Why is it exciting for you? Author contribution: How did the author(s) find the solution? What was a novel contribution beyond traditional approaches?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Limitations&#x2F;challenges&lt;&#x2F;strong&gt; (1 paragraph): What are the assumptions? Are they realistic? What are the technical limitations that the authors acknowledge or not?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Novel idea&#x2F;methods&lt;&#x2F;strong&gt; (1-2 pages): Propose your idea and statistical methods. You could interpret the underlying problem in a different formulation. What are related problems&#x2F;frameworks, but not adopted by the authors?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Results&lt;&#x2F;strong&gt; (1-2 pages): Include one figure that sketches your approaches. Show tables and figures that clearly demonstrate your methods.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;&#x2F;strong&gt; (1 page): Briefly discuss what you have learned and what you would achieve if you were to develop this to a full paper. How would you validate your findings in independent studies, including wet-lab experiments?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;available-papers&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#available-papers&quot; aria-label=&quot;Anchor link for: available-papers&quot;&gt;Available Papers&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Madrigal, A., Lu, T., Soto, L. M., &amp;amp; Najafabadi, H. S. (2024). &lt;a href=&quot;https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;s41467-024-50963-0&quot;&gt;A unified model for interpretable latent embedding of multi-sample, multi-condition single-cell data&lt;&#x2F;a&gt;. Nature Communications, 15(1), 6573.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Qiu, Y., Sun, J., &amp;amp; Zhou, X.-H. (2023). &lt;a href=&quot;https:&#x2F;&#x2F;www.tandfonline.com&#x2F;doi&#x2F;full&#x2F;10.1080&#x2F;01621459.2023.2252135&quot;&gt;Unveiling the unobservable: Causal inference on multiple derived outcomes&lt;&#x2F;a&gt;. Journal of the American Statistical Association, 1–12.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;papers-claimed-by-other-students&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#papers-claimed-by-other-students&quot; aria-label=&quot;Anchor link for: papers-claimed-by-other-students&quot;&gt;Papers claimed by other students&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bridgeford, E. W., Powell, M., Kiar, G., Noble, S., Chung, J., Panda, S., Lawrence, R., Xu, T., Milham, M., Caffo, B., &amp;amp; Vogelstein, J. T. (2024). &lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1101&#x2F;2021.09.03.458920&quot;&gt;When no answer is better than a wrong answer: a causal perspective on batch effects&lt;&#x2F;a&gt;. In bioRxiv (p. 2021.09.03.458920).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Demirel, I., Alaa, A., Philippakis, A., &amp;amp; Sontag, D. (2024). &lt;a href=&quot;https:&#x2F;&#x2F;proceedings.mlr.press&#x2F;v235&#x2F;demirel24a.html&quot;&gt;Prediction-powered Generalization of Causal Inferences&lt;&#x2F;a&gt;. International Conference on Machine Learning, 10385–10408.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Some configuration updates</title>
        <published>2024-08-30T00:00:00+00:00</published>
        <updated>2024-08-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/config-2024/"/>
        <id>https://ypark.github.io/posts/config-2024/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/config-2024/">&lt;h3 id=&quot;emacs-for-rust-with-rustic-and-lsp&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#emacs-for-rust-with-rustic-and-lsp&quot; aria-label=&quot;Anchor link for: emacs-for-rust-with-rustic-and-lsp&quot;&gt;Emacs for Rust with &lt;code&gt;rustic&lt;&#x2F;code&gt; and &lt;code&gt;lsp&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Learning Rust is my personal goal for this year. It is very strict in type checking and memory ownership. So, I needed some help until I could fully grasp its key concepts and syntax. I use Emacs for almost everything, including coding. After an hour of searching, I think I found a pretty good setup (a part of &lt;code&gt;.emacs.d&#x2F;init.el&lt;&#x2F;code&gt;):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lisp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-lisp &quot;&gt;&lt;code class=&quot;language-lisp&quot; data-lang=&quot;lisp&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; Ensure that rust-mode is installed
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; Set the key binding for rust-format-buffer
&lt;&#x2F;span&gt;&lt;span&gt;  (define&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;key rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map &lt;&#x2F;span&gt;&lt;span&gt;(kbd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-f&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;#&amp;#39;rust-format-buffer&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode
&lt;&#x2F;span&gt;&lt;span&gt;  :init
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;#&amp;#39;lsp&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;server &amp;#39;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;analyzer))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; rustic
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure
&lt;&#x2F;span&gt;&lt;span&gt;  :bind (:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt; rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-j&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;ui&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;imenu)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-?&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;references)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c a&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;execute&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;action)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;rename)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c q&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;workspace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;restart)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c Q&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;workspace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;shutdown)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c s&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;analyzer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;status))
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span&gt;() (flyspell&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; Stop reformatting every time on save
&lt;&#x2F;span&gt;&lt;span&gt;(rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;disable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can peek into documentation and &lt;code&gt;fn&lt;&#x2F;code&gt; and &lt;code&gt;struct&lt;&#x2F;code&gt; definitions.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lisp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-lisp &quot;&gt;&lt;code class=&quot;language-lisp&quot; data-lang=&quot;lisp&quot;&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;inlay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;enable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;ui&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;peek&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;enable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; special&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;names
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;#39;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*rustic-compilation*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; special&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;function
&lt;&#x2F;span&gt;&lt;span&gt;      (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span&gt;(buffer &amp;amp;optional args)
&lt;&#x2F;span&gt;&lt;span&gt;        (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;window)
&lt;&#x2F;span&gt;&lt;span&gt;        (switch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer buffer)
&lt;&#x2F;span&gt;&lt;span&gt;        (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;window buffer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; company
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;idle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;delay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.25&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; how long to wait until popup
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; (company-begin-commands nil) ;; uncomment to disable popup
&lt;&#x2F;span&gt;&lt;span&gt;  :bind
&lt;&#x2F;span&gt;&lt;span&gt;  (:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt; company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;active&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;next)
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-p&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;previous&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-&amp;lt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;first&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;last&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; yasnippet
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (yas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;reload&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;all)
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;prog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;yas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;minor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode)
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;yas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;minor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When we deal with multiple projects, unused and leftover workspace caused performance drawback. So, the following wrapper is pretty handy.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lisp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-lisp &quot;&gt;&lt;code class=&quot;language-lisp&quot; data-lang=&quot;lisp&quot;&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;defun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;cleanup-lsp &lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Remove all the workspace folders from LSP&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  (interactive)
&lt;&#x2F;span&gt;&lt;span&gt;  (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;((folders (lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;session&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;folders (lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;session))))
&lt;&#x2F;span&gt;&lt;span&gt;    (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;while&lt;&#x2F;span&gt;&lt;span&gt; folders
&lt;&#x2F;span&gt;&lt;span&gt;      (lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;workspace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;folders&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;remove &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;car&lt;&#x2F;span&gt;&lt;span&gt; folders))
&lt;&#x2F;span&gt;&lt;span&gt;      (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; folders (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cdr&lt;&#x2F;span&gt;&lt;span&gt; folders)))))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Overall, coding Rust is pretty fun, and working with &lt;code&gt;lsp&lt;&#x2F;code&gt;, &lt;code&gt;company&lt;&#x2F;code&gt;, &lt;code&gt;yasnippet&lt;&#x2F;code&gt; can certainly teach me my mistakes interactively. They are quite resource-heavy, but I will need &quot;a tutor&quot; for a while.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fix-unstable-internet&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fix-unstable-internet&quot; aria-label=&quot;Anchor link for: fix-unstable-internet&quot;&gt;Fix unstable Internet&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Working from home for a couple of weeks, I learned that my network is very unstable, especially with the ethernet connection! The problem was my internet service provider is not top-notch, so the download and upload speed shouldn&#x27;t exceed 100mb&#x2F;s, but my ethernet device kept on trying to find better speed but couldn&#x27;t do it. I found a nice solution that the network speed can be simply capped by disabling &lt;code&gt;autoneg&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; lshw&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -C&lt;&#x2F;span&gt;&lt;span&gt; network
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; ethtool&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --change &lt;&#x2F;span&gt;&lt;span&gt;${eth} speed 100 autoneg off
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;fix-display-issues&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fix-display-issues&quot; aria-label=&quot;Anchor link for: fix-display-issues&quot;&gt;Fix display issues&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Amazon Prime Day got me a new monitor, which is spacious and bulky enough to force me to fold up my laptop screen on my small desk. But I found Ubuntu keeps on activating my laptop screen. I can exclusively switch on my HDMI screen with this command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xrandr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --output&lt;&#x2F;span&gt;&lt;span&gt; eDP-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --off --output&lt;&#x2F;span&gt;&lt;span&gt; HDMI-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --primary --auto
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A new config for blogging</title>
        <published>2024-08-01T00:00:00+00:00</published>
        <updated>2024-08-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/zola-setups-2024/"/>
        <id>https://ypark.github.io/posts/zola-setups-2024/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/zola-setups-2024/">&lt;p&gt;I&#x27;ve kept on telling my people that researchers should have a way to constantly write out what they think and learn, even though things may turn out to be wrong at some point. I posted &lt;a href=&quot;https:&#x2F;&#x2F;nathanwpyle.threadless.com&#x2F;designs&#x2F;strange-planet-i-have-attempted-science&quot;&gt;this&lt;&#x2F;a&gt; (from Nathan Pyle&#x27;s comic, &quot;Strange Planet&quot;) on my door to remind me of the importance of conveying ideas with evidence. I also believe that paper writing starts at the beginning of any project with a small step at a time. &lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;academic-program&#x2F;write-great-research-paper&#x2F;&quot;&gt;Idea conception, writing a paper, and doing research&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Although I keep my markdown notes and scanned copies of scribbles, I have been searching for a quick and easy way to keep my ideas. First of all,  I was fed up enough with &lt;code&gt;R&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;bookdown&lt;&#x2F;code&gt; and &lt;code&gt;Hugo&lt;&#x2F;code&gt; setup. It was more complex than I would ever need. I have some experience with old web programming, but &lt;code&gt;Hugo&lt;&#x2F;code&gt; was too hard for me. After searching and searching, I found &lt;code&gt;Zola&lt;&#x2F;code&gt; was simple enough, command line friendly, and editor friendly. It also took me some time to figure out, though.&lt;&#x2F;p&gt;
&lt;p&gt;First, install &lt;a href=&quot;https:&#x2F;&#x2F;ypark.github.io&#x2F;posts&#x2F;zola-setups-2024&#x2F;%60https:&#x2F;&#x2F;www.getzola.org&#x2F;%60&quot;&gt;zola&lt;&#x2F;a&gt; locally. More details on installation can be found: &lt;code&gt;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;installation&#x2F;&lt;&#x2F;code&gt; and some web search.&lt;&#x2F;p&gt;
&lt;p&gt;Then, we can set up a new &lt;code&gt;zola&lt;&#x2F;code&gt; directory:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; init ${BLOG}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here, &lt;code&gt;${BLOG}&lt;&#x2F;code&gt; can be any working directory.&lt;&#x2F;p&gt;
&lt;p&gt;I was too lazy to tweak HTML pages and styles, so I decide to use &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;themes&#x2F;apollo&#x2F;&quot;&gt;Apollo theme&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; submodule add https:&#x2F;&#x2F;github.com&#x2F;not-matthias&#x2F;apollo themes&#x2F;apollo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;or simply clone:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;not-matthias&#x2F;apollo themes&#x2F;apollo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Out of the box, things work fine, but it&#x27;s worth customizing &lt;code&gt;config.toml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;apollo&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;taxonomies &lt;&#x2F;span&gt;&lt;span&gt;= [{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tags&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# The URL the site will be built for
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;base_url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CHANGE ME&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Whether to automatically compile all Sass files in the sass directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;compile_sass &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Whether to build a search index to be used later on by a JavaScript library
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;build_search_index &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;output_dir &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CHANGE ME&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;generate_feeds &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Whether to do syntax highlighting
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Theme can be customised by setting the `highlight_theme` variable to a theme supported by Zola
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;highlight_code &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;highlight_theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ayu-light&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;extra&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# See this for more options: https:&#x2F;&#x2F;github.com&#x2F;not-matthias&#x2F;apollo&#x2F;blob&#x2F;main&#x2F;config.toml#L14
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;toc &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;use_cdn &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;toggle&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;socials &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;menu &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;mathjax &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;mathjax_dollar_inline_enable &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;fancy_code &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;insert_anchor_links &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;heading&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;favicon &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;icon&#x2F;favicon.ico&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, we can create &lt;code&gt;_index.md&lt;&#x2F;code&gt; as a front page:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;emacs&lt;&#x2F;span&gt;&lt;span&gt; content&#x2F;_index.md
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;_index.md&lt;&#x2F;code&gt; could be something like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;title= &amp;quot;my blog&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;template = &amp;quot;homepage.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Welcome to my blog
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can ask &lt;code&gt;zola&lt;&#x2F;code&gt; to generate HTML and &lt;code&gt;js&lt;&#x2F;code&gt; pages:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A new site will be located under where the &lt;code&gt;output_dir&lt;&#x2F;code&gt; is pointing to. We can simply push the entire directory to &lt;code&gt;GitHub&lt;&#x2F;code&gt; or a similar kind.&lt;&#x2F;p&gt;
&lt;p&gt;Every time we need to update, we can create a new &#x27;md&#x27; file under &#x27;content&#x27; where different. To have a handle to a new set of posts, we need to add a new menu item in &lt;code&gt;config.toml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;menu = [
&lt;&#x2F;span&gt;&lt;span&gt;    { name = &amp;quot;&#x2F;posts&amp;quot;, url = &amp;quot;&#x2F;posts&amp;quot;, weight = 1 },
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In &lt;code&gt;content&#x2F;posts&#x2F;&lt;&#x2F;code&gt;, we can add &lt;code&gt;_index.md&lt;&#x2F;code&gt; to help navigate posts:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;paginate_by = 7
&lt;&#x2F;span&gt;&lt;span&gt;title = &amp;quot;Posts&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;sort_by = &amp;quot;date&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;insert_anchor_links = &amp;quot;heading&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Happy blogging!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yi-Ting(Tina) Hsu</title>
        <published>2024-07-01T00:00:00+00:00</published>
        <updated>2024-07-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/tina0420/"/>
        <id>https://ypark.github.io/team/tina0420/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/tina0420/">&lt;p&gt;I am currently a PhD student in Bioinformatics graduate program and interested in developing algorithms for innovating applications in the fields of medicine and biology. Not only coding, I also like to explore new sights of biology, especially about cancers.&lt;&#x2F;p&gt;
&lt;p&gt;interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Data Science&lt;&#x2F;li&gt;
&lt;li&gt;Machine Learning&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pattie Ye</title>
        <published>2024-05-31T00:00:00+00:00</published>
        <updated>2024-05-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/alumni/pattieye/"/>
        <id>https://ypark.github.io/alumni/pattieye/</id>
        
        <content type="html" xml:base="https://ypark.github.io/alumni/pattieye/">&lt;p&gt;I was a Master’s student in Bioinformatics starting in Fall 2021 under the co-supervision of Dr. Yongjin Park and &lt;a href=&quot;https:&#x2F;&#x2F;www.bcchr.ca&#x2F;rklein-geltink&quot;&gt;Dr. Ramon Klein Geltink&lt;&#x2F;a&gt;. I completed my BSc from the University of British Columbia in 2021 with a combined major in Computer Science and Statistics. My main research interests pertain to studying the underlying biological mechanisms of autoimmune and inflammatory disease using large scale data analysis.&lt;&#x2F;p&gt;
&lt;p&gt;Outside of academia, I am a member of the Varsity Men’s Rowing team at UBC as a coxswain. I served as rowing team captain for two years and have won two national championships. I also enjoy cooking, reading, and taking care of houseplants.&lt;&#x2F;p&gt;
&lt;p&gt;Research interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Statistical Genomics&lt;&#x2F;li&gt;
&lt;li&gt;Complex Disease&lt;&#x2F;li&gt;
&lt;li&gt;Autoimmune and Inflammatory Disease&lt;&#x2F;li&gt;
&lt;li&gt;Immunometabolism&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yichen Zhang</title>
        <published>2024-05-31T00:00:00+00:00</published>
        <updated>2024-05-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/alumni/yichen/"/>
        <id>https://ypark.github.io/alumni/yichen/</id>
        
        <content type="html" xml:base="https://ypark.github.io/alumni/yichen/">&lt;p&gt;I was a Ph.D. student in the Department of Statistics. I employ techniques from deep learning and bayesian statistics to shed light on the mechanism of complex human diseases. I am generally interested in developing interpretable and scalable algorithms to uncover the underlying structure of biological data. Before that, I obtained my Master’s Degree in Biostatistics from the University of Washington, working on matrix completion and cell type deconvolution problems with Noah Simon.&lt;&#x2F;p&gt;
&lt;p&gt;Besides research, I am a food enthusiast. I love cooking, exploring local restaurants, watching food &amp;amp; cooking documentaries and brewing coffee and tea. I do weight training from time to time so that I can enjoy more food.&lt;&#x2F;p&gt;
&lt;p&gt;Research interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Bayesian Statistics&lt;&#x2F;li&gt;
&lt;li&gt;Deep Learning&lt;&#x2F;li&gt;
&lt;li&gt;Graphical Model&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yaoyue (Yolanda) Feng</title>
        <published>2024-05-01T00:00:00+00:00</published>
        <updated>2024-05-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/yaoyue/"/>
        <id>https://ypark.github.io/team/yaoyue/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/yaoyue/">&lt;p&gt;I hope to use the combination of bioinformatics and traditional biological experiments to explore the disease progression and drug resistance in Acute Myeloid Leukemia, in order to help more clinical patients. I obtained my Master of Research Degree in Cancer Biology from Imperial College London, working on Hepatocellular Carcinoma under hypoxia condition. And I studied cisplatin resistance in Ovarian Cancer at Sichuan University during my undergraduate stage.&lt;&#x2F;p&gt;
&lt;p&gt;In my spare time, I prefer to stay at home watching movies or cooking instead of outdoor activities. I only go out with my friends when the weather is really nice. I also like basketball, but I watch it more often than I play it myself.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Maxwell Douglas</title>
        <published>2024-01-15T00:00:00+00:00</published>
        <updated>2024-01-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/genomaxx/"/>
        <id>https://ypark.github.io/team/genomaxx/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/genomaxx/">&lt;p&gt;Hi! I&#x27;m a computational biologist passionate about the intersection of software, analytics, and biologic&#x2F;medical data. I love talking shop about the how, when, and why of deriving insights from data. My research background is heavy in the various &#x27;omics&#x27; technologies with a particular focus on genomics.&lt;&#x2F;p&gt;
&lt;p&gt;interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Computational Oncology&lt;&#x2F;li&gt;
&lt;li&gt;Open-source software&lt;&#x2F;li&gt;
&lt;li&gt;Causal Inference&lt;&#x2F;li&gt;
&lt;li&gt;Data-Science&lt;&#x2F;li&gt;
&lt;li&gt;Translational Science&lt;&#x2F;li&gt;
&lt;li&gt;Public Health&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hobbies:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Trail Running&lt;&#x2F;li&gt;
&lt;li&gt;Soccer&lt;&#x2F;li&gt;
&lt;li&gt;Skiing&lt;&#x2F;li&gt;
&lt;li&gt;Climbing&lt;&#x2F;li&gt;
&lt;li&gt;Backpacking&#x2F;hiking&lt;&#x2F;li&gt;
&lt;li&gt;DND&lt;&#x2F;li&gt;
&lt;li&gt;Volunteering &amp;amp; community-building&#x2F;outreach&lt;&#x2F;li&gt;
&lt;li&gt;Struggling to keep house-plants alive&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Adjusting batch effect in pseudobulk samples is a causal inference problem</title>
        <published>2023-06-19T00:00:00+00:00</published>
        <updated>2023-06-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/batch-correction-2023/"/>
        <id>https://ypark.github.io/posts/batch-correction-2023/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/batch-correction-2023/">&lt;h3 id=&quot;inspiration&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#inspiration&quot; aria-label=&quot;Anchor link for: inspiration&quot;&gt;Inspiration&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Our previous work demonstrates that fiding causal difference at a pseudobulk level is easier than dealing with noisy cell-level data: &lt;a href=&quot;https:&#x2F;&#x2F;genomebiology.biomedcentral.com&#x2F;articles&#x2F;10.1186&#x2F;s13059-021-02438-4&quot;&gt;Counterfactual inference for single-cell gene expression analysis&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Interestingly, other people considered identifying batch effects should be treated as a causal effect estimation problem: &lt;a href=&quot;https:&#x2F;&#x2F;www.biorxiv.org&#x2F;content&#x2F;10.1101&#x2F;2021.09.03.458920v3&quot;&gt;Batch Effects are Causal Effects: Applications in Human Connectomics&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;a-generative-scheme-for-a-single-cell-count-matrix-with-multiplicative-batch-effects&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#a-generative-scheme-for-a-single-cell-count-matrix-with-multiplicative-batch-effects&quot; aria-label=&quot;Anchor link for: a-generative-scheme-for-a-single-cell-count-matrix-with-multiplicative-batch-effects&quot;&gt;A generative scheme for a single-cell count matrix with multiplicative batch effects&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;We encounter single-cell expression data consisting of multiple batches. One of the primary goals is to identify cell types (clusters&#x2F;factors) and cell-type-specific gene expression patterns. However, distinguishing batch-specific and cell-type-specific genes only by a factorization method is challenging and often not identifiable from data alone. For each gene $g$ and cell $j$, the gene expression $Y_{gj}$ were sampled from Poisson distribution with the rate parameter:&lt;&#x2F;p&gt;
&lt;p&gt;$$\lambda_{gj} = \lambda_{gj}^{\textsf{unbiased}} \times \prod_{k} \delta_{gk}^{X_{kj}},$$&lt;&#x2F;p&gt;
&lt;p&gt;affected by the batch effects $\delta_{gk}$. More formally, letting $X_{kj}$ be a batch membership matrix, assigning a cell $j$ to a batch $k$ if and only if $X_{kj}=1$, we assume the average gene expression rates are linearly affected by in the log-transformed space:&lt;&#x2F;p&gt;
&lt;p&gt;$$\mathbb{E}\left[\ln Y_{gj}\right] = \ln \left( \sum_{t} \beta_{gt} \theta_{jt} \right) + \sum_{k} \ln\delta_{gk} X_{kj}.$$&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;set.seed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1331&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;500 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# genes
&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1000 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# cells
&lt;&#x2F;span&gt;&lt;span&gt;nb &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# batches
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## 1. batch membership
&lt;&#x2F;span&gt;&lt;span&gt;X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nb)
&lt;&#x2F;span&gt;&lt;span&gt;batch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sample&lt;&#x2F;span&gt;&lt;span&gt;(nb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;replace &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;TRUE&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;nb){
&lt;&#x2F;span&gt;&lt;span&gt;    X[batch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; b] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## 2. batch effects
&lt;&#x2F;span&gt;&lt;span&gt;W.true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;rnorm&lt;&#x2F;span&gt;&lt;span&gt;(m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;nb)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nb)
&lt;&#x2F;span&gt;&lt;span&gt;ln.delta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(W.true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(X)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; scale)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## 3. true effects
&lt;&#x2F;span&gt;&lt;span&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span&gt;.beta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;rgamma&lt;&#x2F;span&gt;&lt;span&gt;(m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; K&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; K)
&lt;&#x2F;span&gt;&lt;span&gt;.theta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;rgamma&lt;&#x2F;span&gt;&lt;span&gt;(n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; K&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; K)
&lt;&#x2F;span&gt;&lt;span&gt;lambda.true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; .beta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(.theta)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;lambda &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; lambda.true &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exp&lt;&#x2F;span&gt;&lt;span&gt;(ln.delta)
&lt;&#x2F;span&gt;&lt;span&gt;yy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(lambda&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sapply&lt;&#x2F;span&gt;&lt;span&gt;(l&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; rpois&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;oo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;order&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(.theta)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; which.max))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If we can accurately estimate a true batch effect matrix, say $\delta_{gk}$, it is straightforward to adjust the difference between batches. How can we identify the true batch effect $\delta_{gk}$ for all the genes $g$ specifically expressed in the batch $k$? If we match cells $i$ and $j$ sampled from the batches $a$ and $b$, respectively, we expect the batch-specific difference $\delta_{ga} \neq \delta_{gk}$ will persist and even amplify, but the difference originated from cell types will vanish. This problem is equivalent to estimating the potential outcome of gene expressions in each batch $k$, $\mathbb{E}\left[Y_{gj}^{(k)}\right]$.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-causal-inference-approach-to-identify-batch-effects&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#a-causal-inference-approach-to-identify-batch-effects&quot; aria-label=&quot;Anchor link for: a-causal-inference-approach-to-identify-batch-effects&quot;&gt;A causal inference approach to identify batch effects&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;To dissect batch-specific effect in a causal inference (potential outcome) framework, we assume our confounding variables $Q$ are well-distributed across different batches:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Overlap: $0 &amp;lt; p(X_{kj}=1|Q) &amp;lt; 1$ for all $k$.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Moreover, we assume these covariates are sufficient enough to induce conditional dependence between potential (imputed) gene expression and batch assignment mechanisms:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Strong ignorability: $(Y(k), Y(k&#x27;)) \perp\perp X | Q$ for all $k,k&#x27;$ pairs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;estimation-of-the-batch-effects-by-matching&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#estimation-of-the-batch-effects-by-matching&quot; aria-label=&quot;Anchor link for: estimation-of-the-batch-effects-by-matching&quot;&gt;Estimation of the batch effects by matching&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Suppose we can counterfactually estimate gene expressions of a certain cell $j$ if the cell was measured in different batches other than the observed batch $k$.&lt;&#x2F;p&gt;
&lt;p&gt;$$Z_{gj} = \frac{ \sum_{i} (1 - X_{ik}) w_{ji} Y_{gi} }{ \sum_{i} (1 - X_{ik}) w_{ji} }$$&lt;&#x2F;p&gt;
&lt;p&gt;Like many other batch correction methods invented for single-cell RNA-seq analysis, we will assume $Z_{gj}$ reliably contain biologically-relevant cell state information while excluding the batch-specific effects to which the cell $j$ belong.&lt;&#x2F;p&gt;
&lt;p&gt;Observed log-likelihood:
$$\prod_{j} p(Y_{gj}|\mu_{gs},\delta_{gk},X_{jk})
=\prod_{j} \operatorname{Poisson}(Y_{gj}|\mu_{gs} \sum_{k} \delta_{gk} X_{jk})$$&lt;&#x2F;p&gt;
&lt;p&gt;Counterfactual log-likelihood:
$$\prod_{j} p(Z_{gj}|\mu_{gs}, \gamma_{gs}) = \prod_{j} \operatorname{Poisson}(Z_{gj}|\mu_{gs} \gamma_{gs})$$&lt;&#x2F;p&gt;
&lt;h4 id=&quot;local-update-maximize-batch-s-specific-parameters&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#local-update-maximize-batch-s-specific-parameters&quot; aria-label=&quot;Anchor link for: local-update-maximize-batch-s-specific-parameters&quot;&gt;Local update: Maximize batch $s$-specific parameters&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;Let&#x27;s update $\mu_{gs}$ for a gene $g$ in a sample $s$:&lt;&#x2F;p&gt;
&lt;p&gt;$$\mathbb{E}\left[\mu_{gs}\right] \approx \frac{ \sum_{j \in C_{s}} Y_{gj} + \sum_{j \in C_{s}} Z_{gj} }{\sum_{k} \delta_{gk} n_{sk} + n_{s} \gamma_{gs}}$$&lt;&#x2F;p&gt;
&lt;p&gt;Letting $p_{sk} = n_{sk} &#x2F; n_{s}$,&lt;&#x2F;p&gt;
&lt;p&gt;$$\mu_{gs} \gets \frac{ Y_{gs} + Z_{gs}}{\sum_{k} \delta_{gk} p_{sk} + \gamma_{gs}}$$&lt;&#x2F;p&gt;
&lt;p&gt;If $\delta_{gk} \to 0$ and $p_{sk}=1$, meaning that this sample $s$ is just sampled from the batch $k$ only,
$\mu_{gs} \to Y_{gs} + Z_{gs}$ and
$Y_{gs} \to Y_{gsk} = 0$.
Therefore, $\mu_{gs} \to Z_{gs}$.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;global-update&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#global-update&quot; aria-label=&quot;Anchor link for: global-update&quot;&gt;Global update&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;$$\mathbb{E}\left[\delta_{gk}\right] \approx \frac{\sum_{s} \sum_{j \in C_{s}} X_{kj} Y_{gj}}{\sum_{s} \mu_{gs} \sum_{j \in C_{s}} X_{kj}}$$&lt;&#x2F;p&gt;
&lt;p&gt;$$\delta_{gk} \gets \frac{\sum_{s} Y_{gsk} n_{sk}}{\sum_{s} \mu_{gs} n_{sk}}$$&lt;&#x2F;p&gt;
&lt;p&gt;If $Y_{gsk} \to \mu_{gs}$ for all $s$, $\delta_{gk} \to 1$. If $Y_{gsk} &amp;lt; \mu_{gs}$ in all $s$, $\delta_{gk} &amp;lt; 1$. If $Y_{gsk} \to 0$ for all $s$, $\delta_{gk} \to 0$.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;algorithm&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#algorithm&quot; aria-label=&quot;Anchor link for: algorithm&quot;&gt;Algorithm&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Initialize batch effect $\delta_{gk} \gets 1$ for each gene $g$ and batch $k$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Initialize $\gamma_{gs} \gets 1$ for each sample $s$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Static global stat: $S_{gk} \gets 0$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;For each pseudo-bulk sample $s$ with cells $C_{s}$,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$n_{sk} \gets \sum_{j \in C_{s}} X_{kj}$, $n_{s} \gets \sum_{k} n_{sk}$, $p_{sk} \gets n_{sk}&#x2F;n_{s}$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;$Y_{gs} \gets \sum_{j \in C_{s}} Y_{gj} &#x2F; n_{s}$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;$Y_{gsk} \gets \sum_{j \in C_{s}} Y_{gj} X_{kj} &#x2F; n_{s}$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;$Z_{gs} \gets \sum_{j \in C_{s}} Z_{gj} &#x2F; n_{s}$ after matching and imputation&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;$S_{gk} \gets S_{gk} + Y_{gsk} n_{sk}$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Iterative-updated global stat: $T_{gk} \gets 0$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;(Local step) For each PB sample $s$:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\delta_{gs} \gets \sum_{k} \delta_{gk} p_{sk}$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;$\mu_{gs} \gets (Y_{gs} + Z_{gs}) &#x2F; (\gamma_{gs} + \delta_{gs})$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;$\gamma_{gs} \gets (Y_{gs})&#x2F;(\mu_{gs})$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;For each $k$: $T_{gk} \gets T_{gk} + \mu_{gs} n_{sk}$&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;(Global step) For each batch $k$:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$\delta_{gk} \gets S_{gk} &#x2F; T_{gk}$&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Repeat the previous three steps (5-7) until convergence&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;a-toy-example&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#a-toy-example&quot; aria-label=&quot;Anchor link for: a-toy-example&quot;&gt;A toy example&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## 1. project
&lt;&#x2F;span&gt;&lt;span&gt;K &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span&gt;R &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;rnorm&lt;&#x2F;span&gt;&lt;span&gt;(m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; K)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; K&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; m)
&lt;&#x2F;span&gt;&lt;span&gt;Q.raw &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; R &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*%&lt;&#x2F;span&gt;&lt;span&gt; yy &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# K x n
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Before we adjust batch membership in the random projection matrix:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(Q.raw)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; X)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;##            [,1]       [,2]
&lt;&#x2F;span&gt;&lt;span&gt;## [1,]  0.7617260 -0.7617260
&lt;&#x2F;span&gt;&lt;span&gt;## [2,]  0.8283630 -0.8283630
&lt;&#x2F;span&gt;&lt;span&gt;## [3,]  0.8099248 -0.8099248
&lt;&#x2F;span&gt;&lt;span&gt;## [4,] -0.7250199  0.7250199
&lt;&#x2F;span&gt;&lt;span&gt;## [5,]  0.6651915 -0.6651915
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## 2. regress out
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;##
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;##  X theta = X inv(X&amp;#39;X) X&amp;#39; Y
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;##          = U D V&amp;#39; V inv(D^2) V&amp;#39; (U D V&amp;#39;)&amp;#39; Y
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;##          = U inv(D) V&amp;#39; V D U&amp;#39; Y
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;##          = U U&amp;#39; Y
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;x.svd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;svd&lt;&#x2F;span&gt;&lt;span&gt;(X)
&lt;&#x2F;span&gt;&lt;span&gt;U &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; x.svd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;u
&lt;&#x2F;span&gt;&lt;span&gt;U.t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(x.svd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;u)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Q.t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(Q.raw)
&lt;&#x2F;span&gt;&lt;span&gt;Q.t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; Q.t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; U &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*%&lt;&#x2F;span&gt;&lt;span&gt; U.t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*%&lt;&#x2F;span&gt;&lt;span&gt; Q.t
&lt;&#x2F;span&gt;&lt;span&gt;Q &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(Q.t)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After we adjust the batch effects:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;cor&lt;&#x2F;span&gt;&lt;span&gt;(Q.t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; X)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;##               [,1]          [,2]
&lt;&#x2F;span&gt;&lt;span&gt;## [1,] -2.744966e-16  2.744966e-16
&lt;&#x2F;span&gt;&lt;span&gt;## [2,] -6.208765e-16  6.208765e-16
&lt;&#x2F;span&gt;&lt;span&gt;## [3,]  3.233061e-16 -3.233061e-16
&lt;&#x2F;span&gt;&lt;span&gt;## [4,]  1.992261e-16 -1.992261e-16
&lt;&#x2F;span&gt;&lt;span&gt;## [5,] -2.716381e-16  2.716381e-16
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span&gt;q.svd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;svd&lt;&#x2F;span&gt;&lt;span&gt;(Q)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## 3. sorting
&lt;&#x2F;span&gt;&lt;span&gt;B &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sign&lt;&#x2F;span&gt;&lt;span&gt;(q.svd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt;v) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sweep&lt;&#x2F;span&gt;&lt;span&gt;(B&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;seq&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;K&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; `*`)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; sum) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span&gt;feat.dn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(Q&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;) x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sqrt&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;(x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;knn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;nrow&lt;&#x2F;span&gt;&lt;span&gt;(feat.dn)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;library&lt;&#x2F;span&gt;&lt;span&gt;(RcppAnnoy)
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## a. construct dictionary for each batch
&lt;&#x2F;span&gt;&lt;span&gt;dict.list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lapply&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sort&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;unique&lt;&#x2F;span&gt;&lt;span&gt;(batch))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span&gt;(AnnoyAngular&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; d) })
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(j &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;(batch)){
&lt;&#x2F;span&gt;&lt;span&gt;    b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; batch[j]
&lt;&#x2F;span&gt;&lt;span&gt;    dict.list[[b]]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;addItem&lt;&#x2F;span&gt;&lt;span&gt;(j&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; feat.dn[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;j])
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(dd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; dict.list){
&lt;&#x2F;span&gt;&lt;span&gt;    dd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## b. a simplified routine to retrieve and estimate counterfactual y
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;.counterfactual &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;j&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; feat.dn[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;j]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    nn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    dd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;nb){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(k &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; batch[j]) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;next
&lt;&#x2F;span&gt;&lt;span&gt;        .nn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; dict.list[[k]]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;getNNsByVector&lt;&#x2F;span&gt;&lt;span&gt;(v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; knn)
&lt;&#x2F;span&gt;&lt;span&gt;        .dd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(feat.dn[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; .nn]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;u&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;((u &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; v)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;        nn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;(nn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; .nn)
&lt;&#x2F;span&gt;&lt;span&gt;        dd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;c&lt;&#x2F;span&gt;&lt;span&gt;(dd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; .dd)
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;exp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;(dd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;max&lt;&#x2F;span&gt;&lt;span&gt;(dd)))
&lt;&#x2F;span&gt;&lt;span&gt;    w &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; w&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;(w)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    yy[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; drop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;FALSE&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(w&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;ncol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;r&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-r &quot;&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span&gt;ngene &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;nrow&lt;&#x2F;span&gt;&lt;span&gt;(yy)
&lt;&#x2F;span&gt;&lt;span&gt;nbatch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;ncol&lt;&#x2F;span&gt;&lt;span&gt;(X)
&lt;&#x2F;span&gt;&lt;span&gt;nsample &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;max&lt;&#x2F;span&gt;&lt;span&gt;(ss)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;.delta.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nbatch)       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gene x batch effects
&lt;&#x2F;span&gt;&lt;span&gt;.delta.num.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nbatch)    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gene x batch numerators
&lt;&#x2F;span&gt;&lt;span&gt;.delta.denom.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nbatch)  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gene x batch denominators
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;.prob.bs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nbatch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nsample)      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# batch x sample probabilities
&lt;&#x2F;span&gt;&lt;span&gt;.size.bs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nbatch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nsample)      &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# batch x sample freq
&lt;&#x2F;span&gt;&lt;span&gt;.ybar.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nsample)       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gene x sample observed average
&lt;&#x2F;span&gt;&lt;span&gt;.zbar.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nsample)       &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gene x sample imputed average
&lt;&#x2F;span&gt;&lt;span&gt;.mu.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nsample)         &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# gene x sample adjusted average
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;## Precalculate some statistics
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;nsample){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;(ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;next
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    .yy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; yy[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; drop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;FALSE&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    .zz &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;do.call&lt;&#x2F;span&gt;&lt;span&gt;(cbind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lapply&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;which&lt;&#x2F;span&gt;&lt;span&gt;(ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; .counterfactual))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    .ybar.ds[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;s] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(.yy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; mean)
&lt;&#x2F;span&gt;&lt;span&gt;    .zbar.ds[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;s] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(.zz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; mean)
&lt;&#x2F;span&gt;&lt;span&gt;    .prob.bs[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;s] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;colMeans&lt;&#x2F;span&gt;&lt;span&gt;(X[ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;    .size.bs[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;s] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;colSums&lt;&#x2F;span&gt;&lt;span&gt;(X[ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    .y.dsb &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; yy[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; drop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;FALSE&lt;&#x2F;span&gt;&lt;span&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*%&lt;&#x2F;span&gt;&lt;span&gt; X[ss &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;, ,&lt;&#x2F;span&gt;&lt;span&gt; drop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;FALSE&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;    .delta.num.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; .delta.num.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; .y.dsb
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;.gamma.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ngene&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; nsample)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;(iter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    .mu.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;- &lt;&#x2F;span&gt;&lt;span&gt;(.ybar.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; .zbar.ds) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;(.delta.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*%&lt;&#x2F;span&gt;&lt;span&gt; .prob.bs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; .gamma.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1e-8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    .gamma.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; .zbar.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;(.mu.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1e-8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    .delta.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; .delta.num.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;(.mu.ds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;%*% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(.size.bs) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1e-8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Can we recover the original batch effects?&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;batch #1
&lt;&#x2F;span&gt;&lt;span&gt;   3 +-+--------+---------+--------+---------+---+
&lt;&#x2F;span&gt;&lt;span&gt;t    |                                      **   |
&lt;&#x2F;span&gt;&lt;span&gt;r    |            *           *  *      ** **  * |
&lt;&#x2F;span&gt;&lt;span&gt;u  2 +                        **  **     * * *   +
&lt;&#x2F;span&gt;&lt;span&gt;e    |                       *  *    ***** **  * |
&lt;&#x2F;span&gt;&lt;span&gt;     |          * *  **  * ** ************ **    |
&lt;&#x2F;span&gt;&lt;span&gt;d  1 +        ** *  ** **  **** ****** **** *    +
&lt;&#x2F;span&gt;&lt;span&gt;e    |       ** ** ****  ****************        |
&lt;&#x2F;span&gt;&lt;span&gt;l    |     *****************************  * *    |
&lt;&#x2F;span&gt;&lt;span&gt;t  0 +  ***  ********************** **           +
&lt;&#x2F;span&gt;&lt;span&gt;a    |   * ************ ** ** ****   *    *      |
&lt;&#x2F;span&gt;&lt;span&gt;  -1 +   ************** * ***** *                +
&lt;&#x2F;span&gt;&lt;span&gt;e    |   ************   *  *    *       *        |
&lt;&#x2F;span&gt;&lt;span&gt;f    |  **** *** **    *    *         *          |
&lt;&#x2F;span&gt;&lt;span&gt;f -2 +  * *  *    *    *                         +
&lt;&#x2F;span&gt;&lt;span&gt;e    |  * **   *                                 |
&lt;&#x2F;span&gt;&lt;span&gt;c    | * **                                      |
&lt;&#x2F;span&gt;&lt;span&gt;t    +-+--------+---------+--------+---------+---+
&lt;&#x2F;span&gt;&lt;span&gt;       0       0.5        1       1.5        2    
&lt;&#x2F;span&gt;&lt;span&gt;               estimated delta (batch 1)          
&lt;&#x2F;span&gt;&lt;span&gt;batch #2
&lt;&#x2F;span&gt;&lt;span&gt;     ++----------+---------+----------+----------+
&lt;&#x2F;span&gt;&lt;span&gt;t    |                                       *   |
&lt;&#x2F;span&gt;&lt;span&gt;r    |                            *           *  |
&lt;&#x2F;span&gt;&lt;span&gt;u    |                               *  *  ***   |
&lt;&#x2F;span&gt;&lt;span&gt;e  2 +                          * * * ** *   * * +
&lt;&#x2F;span&gt;&lt;span&gt;     |            * ***       **   ********* **  |
&lt;&#x2F;span&gt;&lt;span&gt;d    |               ******   ************ ****  |
&lt;&#x2F;span&gt;&lt;span&gt;e    |      *  *  ** ************************ *  |
&lt;&#x2F;span&gt;&lt;span&gt;l    |     *** ****** ******* *************  *   |
&lt;&#x2F;span&gt;&lt;span&gt;t  0 +  ** *****************************  ***  * +
&lt;&#x2F;span&gt;&lt;span&gt;a    |  ********* ******** *** ** ** **  *       |
&lt;&#x2F;span&gt;&lt;span&gt;     | ***************** ** **    *              |
&lt;&#x2F;span&gt;&lt;span&gt;e    | *** *  **  *** ***                        |
&lt;&#x2F;span&gt;&lt;span&gt;f -2 +  *   *   *   *       *                    +
&lt;&#x2F;span&gt;&lt;span&gt;f    |  **                                       |
&lt;&#x2F;span&gt;&lt;span&gt;e    |   *    *                                  |
&lt;&#x2F;span&gt;&lt;span&gt;c    |   *                                       |
&lt;&#x2F;span&gt;&lt;span&gt;t    ++----------+---------+----------+----------+
&lt;&#x2F;span&gt;&lt;span&gt;      0         0.5        1         1.5         2
&lt;&#x2F;span&gt;&lt;span&gt;               estimated delta (batch 2)          
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Are they independent of the cell type effects?&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;batch #1
&lt;&#x2F;span&gt;&lt;span&gt;  15 +-+------------+------------+-----------+------------+----+
&lt;&#x2F;span&gt;&lt;span&gt;t    |            *                            *               |
&lt;&#x2F;span&gt;&lt;span&gt;r    |       *   *    *                                        |
&lt;&#x2F;span&gt;&lt;span&gt;u    |           *                                             |
&lt;&#x2F;span&gt;&lt;span&gt;e 10 +            *                     *        *             +
&lt;&#x2F;span&gt;&lt;span&gt;     |   *            *   **  * * * * *  *           *         |
&lt;&#x2F;span&gt;&lt;span&gt;y    |    ****   *************  *** *   * *** *      *   *     |
&lt;&#x2F;span&gt;&lt;span&gt;     |   **    ** ****    ** * * ********** ** *    *  *       |
&lt;&#x2F;span&gt;&lt;span&gt;m    |    **** ***********   * ************ *  *******  **     |
&lt;&#x2F;span&gt;&lt;span&gt;e  5 +   * ****************** ***************  ******** **     +
&lt;&#x2F;span&gt;&lt;span&gt;a    |   ******* ********************** ********* **** * *  *  |
&lt;&#x2F;span&gt;&lt;span&gt;n    |  **** *************** **  ******* ***  *******  **      |
&lt;&#x2F;span&gt;&lt;span&gt;     |    * ** * ** *  **   ** *    ** ** * * *  ***   * *     |
&lt;&#x2F;span&gt;&lt;span&gt;1    +-+------------+------------+-----------+------------+----+
&lt;&#x2F;span&gt;&lt;span&gt;       0           0.5           1          1.5           2     
&lt;&#x2F;span&gt;&lt;span&gt;                          estimated delta 1                     
&lt;&#x2F;span&gt;&lt;span&gt;batch #2
&lt;&#x2F;span&gt;&lt;span&gt;  15 +-+-------------+-------------+-------------+-------------+
&lt;&#x2F;span&gt;&lt;span&gt;t    |         *                              *                |
&lt;&#x2F;span&gt;&lt;span&gt;r    |                                                  *      |
&lt;&#x2F;span&gt;&lt;span&gt;u    |                                     *      *            |
&lt;&#x2F;span&gt;&lt;span&gt;e    |                  *             *          *             |
&lt;&#x2F;span&gt;&lt;span&gt;  10 +      *   *        *    *  *   *   *    *            *   +
&lt;&#x2F;span&gt;&lt;span&gt;y    |       *     ** ***  * * * **   ** ******* * * **  *     |
&lt;&#x2F;span&gt;&lt;span&gt;     |  * * *    **  * *** * ****** ** **  ******  *** **** *  |
&lt;&#x2F;span&gt;&lt;span&gt;m    |  *** ** ******* ******* ****   ** ***** ***  * ****     |
&lt;&#x2F;span&gt;&lt;span&gt;e  5 +   ** ********* **************** ****** *** ** ***** *   +
&lt;&#x2F;span&gt;&lt;span&gt;a    |  * ****** ***************** ******* *************  **   |
&lt;&#x2F;span&gt;&lt;span&gt;n    |  **** ********** * ***** ** ******** ******* ** ******  |
&lt;&#x2F;span&gt;&lt;span&gt;     |  *   * **** * ** ** *  *   *  ******* ***    * *  *  *  |
&lt;&#x2F;span&gt;&lt;span&gt;2    +-+-------------+-------------+-------------+-------------+
&lt;&#x2F;span&gt;&lt;span&gt;       0            0.5            1            1.5            2
&lt;&#x2F;span&gt;&lt;span&gt;                          estimated delta 2                     
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;While adjusting the estimated batch effects, can we recover the unbiased cell type effects? The following is before adjustment:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;batch #1
&lt;&#x2F;span&gt;&lt;span&gt;  15 ++-----------+-----------+-----------+-----------+--------+
&lt;&#x2F;span&gt;&lt;span&gt;t    |                 *                               *       |
&lt;&#x2F;span&gt;&lt;span&gt;r    |                    *              *        *            |
&lt;&#x2F;span&gt;&lt;span&gt;u    |                                  *                      |
&lt;&#x2F;span&gt;&lt;span&gt;e 10 +              *                            *    *        +
&lt;&#x2F;span&gt;&lt;span&gt;     |       *            *  * **** *   ** *      *            |
&lt;&#x2F;span&gt;&lt;span&gt;y    |         *  ******* ******   ******     ***        *  *  |
&lt;&#x2F;span&gt;&lt;span&gt;     |    *   * * *  * ** *******  *** * ** *  **              |
&lt;&#x2F;span&gt;&lt;span&gt;m    |     *   ***** **** ********************       *      *  |
&lt;&#x2F;span&gt;&lt;span&gt;e  5 +       ********* ************** **** *  **  *****        +
&lt;&#x2F;span&gt;&lt;span&gt;a    |    **** ************************* **   ***  *           |
&lt;&#x2F;span&gt;&lt;span&gt;n    |  ** *************** * **********             *          |
&lt;&#x2F;span&gt;&lt;span&gt;     |  * ****** *********  *** ***  *                         |
&lt;&#x2F;span&gt;&lt;span&gt;#    ++-----------+-----------+-----------+-----------+--------+
&lt;&#x2F;span&gt;&lt;span&gt;      0           1           2           3           4         
&lt;&#x2F;span&gt;&lt;span&gt;                          log1p sample mean                     
&lt;&#x2F;span&gt;&lt;span&gt;batch #2
&lt;&#x2F;span&gt;&lt;span&gt;  15 +-+---------+----------+----------+----------+----------+-+
&lt;&#x2F;span&gt;&lt;span&gt;t    |                          * *                            |
&lt;&#x2F;span&gt;&lt;span&gt;r    |                                                      *  |
&lt;&#x2F;span&gt;&lt;span&gt;u    |                                *             *  *       |
&lt;&#x2F;span&gt;&lt;span&gt;e    |                         *  *   *                        |
&lt;&#x2F;span&gt;&lt;span&gt;  10 +              *   *  *  *  **  **     *                  +
&lt;&#x2F;span&gt;&lt;span&gt;y    |          *   *   ******* ********  *  * *         *     |
&lt;&#x2F;span&gt;&lt;span&gt;     |         *  *****************  * *   ******  ****        |
&lt;&#x2F;span&gt;&lt;span&gt;m    |     * * **** ******************    *        *           |
&lt;&#x2F;span&gt;&lt;span&gt;e  5 +  ***  ************************  *** * *  *        *     +
&lt;&#x2F;span&gt;&lt;span&gt;a    |  *************************** ***** *  **            *   |
&lt;&#x2F;span&gt;&lt;span&gt;n    |    * ********************* **** **                      |
&lt;&#x2F;span&gt;&lt;span&gt;     |   **  ********  * **  *** *                             |
&lt;&#x2F;span&gt;&lt;span&gt;#    +-+---------+----------+----------+----------+----------+-+
&lt;&#x2F;span&gt;&lt;span&gt;       0         1          2          3          4          5  
&lt;&#x2F;span&gt;&lt;span&gt;                          log1p sample mean                     
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here, we adjusted the batch effects:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;batch #1
&lt;&#x2F;span&gt;&lt;span&gt;  15 +----------+------------+------------+------------+-------+
&lt;&#x2F;span&gt;&lt;span&gt;     |                       *                    *            |
&lt;&#x2F;span&gt;&lt;span&gt;t    |                             *                     *  *  |
&lt;&#x2F;span&gt;&lt;span&gt;r    |                                              *          |
&lt;&#x2F;span&gt;&lt;span&gt;u 10 +                     *                   * *             +
&lt;&#x2F;span&gt;&lt;span&gt;e    |                     *  * **** *  * **                   |
&lt;&#x2F;span&gt;&lt;span&gt;     |         * *     * ** *********  * *****   *****  *      |
&lt;&#x2F;span&gt;&lt;span&gt;y    |         *  * * * **** * *****   ***   *  *   *          |
&lt;&#x2F;span&gt;&lt;span&gt;     |           ** ***************** *****   *  *   *         |
&lt;&#x2F;span&gt;&lt;span&gt;m  5 +    *  ****** ***************** *  *****  ** *    *   *  +
&lt;&#x2F;span&gt;&lt;span&gt;e    |  **** ********************** **** **** *            *   |
&lt;&#x2F;span&gt;&lt;span&gt;a    |  ** * ***********************  **    *                  |
&lt;&#x2F;span&gt;&lt;span&gt;n    |   * * * ****** ******  *   *                            |
&lt;&#x2F;span&gt;&lt;span&gt;     +----------+------------+------------+------------+-------+
&lt;&#x2F;span&gt;&lt;span&gt;                1            2            3            4        
&lt;&#x2F;span&gt;&lt;span&gt;                        adjusted sample mean                    
&lt;&#x2F;span&gt;&lt;span&gt;batch #2
&lt;&#x2F;span&gt;&lt;span&gt;  15 +----------+------------+------------+------------+-------+
&lt;&#x2F;span&gt;&lt;span&gt;     |                       *                     *           |
&lt;&#x2F;span&gt;&lt;span&gt;t    |                                                      *  |
&lt;&#x2F;span&gt;&lt;span&gt;r    |                              *               *     *    |
&lt;&#x2F;span&gt;&lt;span&gt;u    |                     *       *           *               |
&lt;&#x2F;span&gt;&lt;span&gt;e 10 +                     *  * *  * *  * * *     *            +
&lt;&#x2F;span&gt;&lt;span&gt;     |         *       * ************  *  ** *   *  *  *       |
&lt;&#x2F;span&gt;&lt;span&gt;y    |           ** * * *** * ******    *** **  *  ****        |
&lt;&#x2F;span&gt;&lt;span&gt;     |         *  **** **********************  **      *       |
&lt;&#x2F;span&gt;&lt;span&gt;m  5 +    *  * *** ******** ************ ** ****** *    *   *  +
&lt;&#x2F;span&gt;&lt;span&gt;e    |  * ** ******************** * **  * * ***           *    |
&lt;&#x2F;span&gt;&lt;span&gt;a    |  *  * ************************ *   *  *                 |
&lt;&#x2F;span&gt;&lt;span&gt;n    |  *  * ** ************* **  *                            |
&lt;&#x2F;span&gt;&lt;span&gt;     +----------+------------+------------+------------+-------+
&lt;&#x2F;span&gt;&lt;span&gt;                1            2            3            4        
&lt;&#x2F;span&gt;&lt;span&gt;                        adjusted sample mean                    
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;before batch adjustment
&lt;&#x2F;span&gt;&lt;span&gt;      +------+------+------+-------+------+------+
&lt;&#x2F;span&gt;&lt;span&gt;   20 +                           ***            +
&lt;&#x2F;span&gt;&lt;span&gt;      |     ******               ******          |
&lt;&#x2F;span&gt;&lt;span&gt;      |   *********             ********         |
&lt;&#x2F;span&gt;&lt;span&gt;      |  ** *******             *********        |
&lt;&#x2F;span&gt;&lt;span&gt;   10 + ********* **            * *******        +
&lt;&#x2F;span&gt;&lt;span&gt;      |  **** *******             ***********    |
&lt;&#x2F;span&gt;&lt;span&gt;t     | *************             *** *********  |
&lt;&#x2F;span&gt;&lt;span&gt;s     |  ***** *** *              ************** |
&lt;&#x2F;span&gt;&lt;span&gt;n   0 +    **********             *** ******* ** +
&lt;&#x2F;span&gt;&lt;span&gt;e     |    **** *****            ************    |
&lt;&#x2F;span&gt;&lt;span&gt;2     |     ****** ****           ** *** **** *  |
&lt;&#x2F;span&gt;&lt;span&gt;  -10 +       *********            *********     +
&lt;&#x2F;span&gt;&lt;span&gt;      |       *********            *********     |
&lt;&#x2F;span&gt;&lt;span&gt;      |       *********             *********    |
&lt;&#x2F;span&gt;&lt;span&gt;      |        *****                ********     |
&lt;&#x2F;span&gt;&lt;span&gt;  -20 +         **                   ** **       +
&lt;&#x2F;span&gt;&lt;span&gt;      +------+------+------+-------+------+------+
&lt;&#x2F;span&gt;&lt;span&gt;            -20    -10     0      10     20       
&lt;&#x2F;span&gt;&lt;span&gt;                          tsne1                   
&lt;&#x2F;span&gt;&lt;span&gt;after batch adjustment
&lt;&#x2F;span&gt;&lt;span&gt;   20 +---+-----+------+-----+-----+------+-----++
&lt;&#x2F;span&gt;&lt;span&gt;      |           ***   **     *                 |
&lt;&#x2F;span&gt;&lt;span&gt;      |          ***      *   ****** *           |
&lt;&#x2F;span&gt;&lt;span&gt;      |       ** **  ****    *********           |
&lt;&#x2F;span&gt;&lt;span&gt;   10 +    * *** ****  **** * ********           +
&lt;&#x2F;span&gt;&lt;span&gt;t     |   ** *** ************ ********  ****     |
&lt;&#x2F;span&gt;&lt;span&gt;s     | ****** ******* ** *** ** ***********     |
&lt;&#x2F;span&gt;&lt;span&gt;n     | ************** * ***** ** ** ******      |
&lt;&#x2F;span&gt;&lt;span&gt;e   0 +   *********** ********************* * *  +
&lt;&#x2F;span&gt;&lt;span&gt;2     |    ******************** ********* ****** |
&lt;&#x2F;span&gt;&lt;span&gt;      |        **** *** ********* ******** ***** |
&lt;&#x2F;span&gt;&lt;span&gt;a     |          ******************************* |
&lt;&#x2F;span&gt;&lt;span&gt;d -10 +             **  *********  **** ******** +
&lt;&#x2F;span&gt;&lt;span&gt;j     |                ** *********************  |
&lt;&#x2F;span&gt;&lt;span&gt;      |                    ***** ***** *** ****  |
&lt;&#x2F;span&gt;&lt;span&gt;      |                   * ******   **** ****   |
&lt;&#x2F;span&gt;&lt;span&gt;      |                              ** * *      |
&lt;&#x2F;span&gt;&lt;span&gt;  -20 +---+-----+------+-----+-----+------+-----++
&lt;&#x2F;span&gt;&lt;span&gt;         -30   -20    -10    0    10     20    30 
&lt;&#x2F;span&gt;&lt;span&gt;                        tsne1 adj                 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ming Yuan</title>
        <published>2022-09-01T00:00:00+00:00</published>
        <updated>2022-09-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/ming/"/>
        <id>https://ypark.github.io/team/ming/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/ming/">&lt;p&gt;I am a PhD student in Biostatistics at UBC. Before this ongoing MSc&#x2F;PhD experience, I completed my BSc degree at Sun Yat-sen University, China, majoring in Statistics in 2020. My main research interests are causal inference and its application to genomic data.&lt;&#x2F;p&gt;
&lt;p&gt;interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Variable selection&lt;&#x2F;li&gt;
&lt;li&gt;Causal inference&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Sam Khalilitousi</title>
        <published>2022-01-31T00:00:00+00:00</published>
        <updated>2022-01-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/alumni/samtoussi/"/>
        <id>https://ypark.github.io/alumni/samtoussi/</id>
        
        <content type="html" xml:base="https://ypark.github.io/alumni/samtoussi/">&lt;p&gt;I have always been intrigued by the ever-growing biological insights that are made possible with computers. This led me to pursue Biomedical Engineering (specializing in Cellular Bioengineering) at UBC, where I have been gaining experience in machine learning and bioinformatics analysis. With a passion centred in machine learning and computational biology, I want to use creativity to help make novel discoveries. Looking forward to connecting and collaborating with the team at the Park Lab!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;samktt.github.io&#x2F;sam&#x2F;&quot;&gt;https:&#x2F;&#x2F;samktt.github.io&#x2F;sam&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Kevin Lam</title>
        <published>2022-01-15T00:00:00+00:00</published>
        <updated>2022-01-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/lamke07/"/>
        <id>https://ypark.github.io/team/lamke07/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/lamke07/">&lt;p&gt;I am a Statistics PhD student, supervised by Dr. Yongjin Park and &lt;a href=&quot;https:&#x2F;&#x2F;www.stat.ubc.ca&#x2F;~benbr&#x2F;&quot;&gt;Dr. Benjamin Bloem-Reddy&lt;&#x2F;a&gt;. I am mainly interested in applying and developing methods that help characterize underlying structures in biological data sets, for example using causal inference. Before the start of the PhD, I spent a year as a research assistant at the MRC Centre for Global Infectious Disease Analysis at Imperial College London where I collaborated with the Malawi Ministry of Health. Our team provided HIV modelling tools to support stakeholders with their policy decisions such as selecting new locations for health facilities for people living with HIV. During my MSc studies, I also worked on identifying the origins of drug resistant malaria in South East Asia using community detection in network analysis.&lt;&#x2F;p&gt;
&lt;p&gt;Outside of my studies, I enjoy watching movies or discovering new restaurants. I also play the piano from time to time when the opportunity arises.&lt;&#x2F;p&gt;
&lt;p&gt;Research interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Causal Inference&lt;&#x2F;li&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Machine Learning&lt;&#x2F;li&gt;
&lt;li&gt;Public Health&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Wanxin Li</title>
        <published>2021-09-01T00:00:00+00:00</published>
        <updated>2021-09-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/wanxinli/"/>
        <id>https://ypark.github.io/team/wanxinli/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/wanxinli/">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Co-supervised by &lt;a href=&quot;https:&#x2F;&#x2F;kdaoduc.com&#x2F;&quot;&gt;Khanh Dao Duc&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational biology&lt;&#x2F;li&gt;
&lt;li&gt;Single cell problems&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Sishir Subedi</title>
        <published>2021-01-01T00:00:00+00:00</published>
        <updated>2021-01-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/sishir/"/>
        <id>https://ypark.github.io/team/sishir/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/sishir/">&lt;p&gt;I am a Ph.D. student in the Department of Bioinformatics. I am interested in developing computational methods to understand the dynamics of cancer genomes. Mainly, I am fascinated by the interplay between the genomic architecture and the adaptive mechanisms of tumor cells in their heterogeneous microenvironment.&lt;&#x2F;p&gt;
&lt;p&gt;Previously, I worked as a bioinformatician where I was involved in developing bioinformatics platforms for oncology diagnostics assays. During this time, pondering at clinical NGS data, I appreciated the importance of untangling DNA sequences and how it translates to helping a hopeful cancer patient. Also, I realized that each patient is unique, so is each cell, and I am excited to learn more about them- one cell at a time. I couldn&#x27;t agree more with what Aristotle famously wrote, &quot;The more you know, the more you realize you don&#x27;t know.&quot;&lt;&#x2F;p&gt;
&lt;p&gt;While offline, I am up for anything outdoor. I like visiting new places, hiking hills, and kayaking.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yongjin P Park</title>
        <published>2020-09-20T00:00:00+00:00</published>
        <updated>2020-09-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/ypp/"/>
        <id>https://ypark.github.io/team/ypp/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/ypp/">&lt;p&gt;I have been an assistant professor in Pathology and Laboratory Medicine, as well as Statistics at &lt;a href=&quot;https:&#x2F;&#x2F;www.ubc.ca&quot;&gt;UBC&lt;&#x2F;a&gt;. I hold &lt;a href=&quot;https:&#x2F;&#x2F;www.chairs-chaires.gc.ca&#x2F;chairholders-titulaires&#x2F;profile-eng.aspx?profileId=5758&quot;&gt;Canada Research Chair Tier-2&lt;&#x2F;a&gt;. My research primarily focuses on developing scalable probabilistic inference methods to elucidate hidden causal mechanisms of human diseases, such as cancer and other common&#x2F;complex disorders.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;&#x2F;em&gt;: I started adding &quot;P&quot; as a middle initial since 2020 to avoid confusion with many other researchers with the same first and last name. &quot;P&quot; may be anything among &quot;Probably,&quot; &quot;Peter,&quot; &quot;Projecting,&quot; etc.&lt;&#x2F;p&gt;
&lt;p&gt;Besides research, I love cooking while trying out different types of cuisines and recipes. I also like to watch history documentaries and films and read books on history. When I was young, I used to play Starcraft and practice hip-hop dance, but I gave them up once I realized that the joy of coding and doing science exceeded and was more rewarding to me.&lt;&#x2F;p&gt;
&lt;!-- education: --&gt;
&lt;!--   courses: --&gt;
&lt;!--   - course: PhD in Biomedical Engineering --&gt;
&lt;!--     institution: Johns Hopkins University --&gt;
&lt;!--     year: 2014 --&gt;
&lt;!--   - course: MSc in Computational Biology --&gt;
&lt;!--     institution: Carnegie Mellon University --&gt;
&lt;!--     year: 2008 --&gt;
&lt;!--   - course: BSc in Biology and Computater Science and Engineering --&gt;
&lt;!--     institution: Seoul National University --&gt;
&lt;!--     year: 2006 --&gt;
&lt;!-- email: &quot;yongjin.park@ubc.ca&quot; --&gt;
&lt;!-- interests: --&gt;
&lt;!-- - Bayesian statistics --&gt;
&lt;!-- - Causal inference --&gt;
&lt;!-- - Computational Biology --&gt;
&lt;!-- - Network science --&gt;
&lt;!-- - Single-cell genomics --&gt;
&lt;!-- organizations: --&gt;
&lt;!-- - name: University of British Columbia --&gt;
&lt;!--   url: &quot;https:&#x2F;&#x2F;www.ubc.ca&#x2F;&quot; --&gt;
&lt;!-- role: Assistant Professor of Pathology and Statistics --&gt;
&lt;!-- social: --&gt;
&lt;!-- - icon: twitter --&gt;
&lt;!--   icon_pack: fab --&gt;
&lt;!--   link: https:&#x2F;&#x2F;twitter.com&#x2F;ypp_lab --&gt;
&lt;!-- - icon: github --&gt;
&lt;!--   icon_pack: fab --&gt;
&lt;!--   link: https:&#x2F;&#x2F;github.com&#x2F;ypark --&gt;
&lt;!-- superuser: true --&gt;
&lt;!-- title: Yongjin Park --&gt;
&lt;!-- user_groups: [&quot;Principal Investigator&quot;] --&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Lightweight tools for integrative single-cell data analysis</title>
        <published>2020-09-06T00:00:00+00:00</published>
        <updated>2020-09-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/lightweight-tools-2020/"/>
        <id>https://ypark.github.io/posts/lightweight-tools-2020/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/lightweight-tools-2020/">&lt;h3 id=&quot;there-are-already-many-tools&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#there-are-already-many-tools&quot; aria-label=&quot;Anchor link for: there-are-already-many-tools&quot;&gt;There are already many tools.&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Ever since single-cell technology was introduced to the world, every year, every month, we see more tools. See &lt;a href=&quot;https:&#x2F;&#x2F;www.scrna-tools.org&#x2F;&quot;&gt;scRNA-tools&lt;&#x2F;a&gt;, for example. Single-cell data analysis often involves many steps of data processing, quantification, and statistical inference. The technology is imperfect, and each step deserves careful consideration of different types of approaches. We, bioinformaticians, test a different combination of small tools and tailor a pipeline that works best for each project. Perhaps, there is no master algorithm, and the competitions among computational biologists are indeed fierce.&lt;&#x2F;p&gt;
&lt;p&gt;The history of genomics repeats itself. For a large part of current single-cell data analysis, we probably see what had happened in RNA-seq, even gene expression microarray analysis. Once we knew how to normalize scRNA-seq data, we would like to know how to test differentially-expressed genes. Then, we would want to build more audacious models, such as gene regulatory networks.  Are there any points that we may contribute from a unique perspective? Can existing tools address all the challenges of single-cell data analysis, e.g., &lt;a href=&quot;https:&#x2F;&#x2F;genomebiology.biomedcentral.com&#x2F;articles&#x2F;10.1186&#x2F;s13059-020-1926-6&quot;&gt;&quot;eleven grand challenges in single-cell data science&quot;&lt;&#x2F;a&gt;? I believe not. We know there has always been enough room for innovation and creativity.&lt;&#x2F;p&gt;
&lt;p&gt;Okay, that sounds meek and quite passive. Why do we dare to jump into the battlefield?  We are not a software-engineering lab, but we can become impatient enough to feel the need for a better tool.  Moreover, we want to understand why and how a certain method works, and when that method doesn&#x27;t work as expected.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-underlying-data-matrix-is-sparse-really-sparse-but-most-methods-make-it-dense&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-underlying-data-matrix-is-sparse-really-sparse-but-most-methods-make-it-dense&quot; aria-label=&quot;Anchor link for: the-underlying-data-matrix-is-sparse-really-sparse-but-most-methods-make-it-dense&quot;&gt;The underlying data matrix is sparse, really sparse, but most methods make it dense.&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Yes, the data matrix is sparse, but it will easily blow up memory if you fill in all the zeros.  Our first impression was that memory overhead was never an issue for most people. Lots of methods focus on replacing the zeros with some other fractional values. Not undermining the validity of imputation methods, we worried more about the scalability of the strategy.  Can such a strategy work for millions of cells with billions of non-zero elements?  Most methods are tested on a rather small data set, including thousands of cells. If a data matrix is sparse, why not we build a method, taking advantage of the sparsity? What if most zero values did not occur by missingness?  What if &lt;a href=&quot;https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;s41587-019-0379-5&quot;&gt;droplet scRNA-seq is not zero-inflated&lt;&#x2F;a&gt;?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;We develop a scalable approach to index millions of cells for fast random access.&lt;&#x2F;strong&gt;
We like to work on a sparse data matrix formatted as &lt;a href=&quot;https:&#x2F;&#x2F;math.nist.gov&#x2F;MatrixMarket&#x2F;formats.html&quot;&gt;a list of triplets&lt;&#x2F;a&gt;, and compressed by &lt;code&gt;gzip&lt;&#x2F;code&gt; or &lt;code&gt;bgzip&lt;&#x2F;code&gt;. The rows correspond to features&#x2F;genes; the columns correspond to UMI barcodes&#x2F;cells. We assume the triplets &lt;code&gt;(row, column, value)&lt;&#x2F;code&gt; are sorted by the columns (cells) in ascending order. To mark the line where the columns change, we modify the indexing scheme of &lt;a href=&quot;http:&#x2F;&#x2F;www.htslib.org&#x2F;doc&#x2F;tabix.html&quot;&gt;TABIX&lt;&#x2F;a&gt; and create a separate &lt;code&gt;.index&lt;&#x2F;code&gt; file to store all the random access points.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;We implement commonly-used matrix operations to manipulate data more swiftly.&lt;&#x2F;strong&gt; In some cases, it is worthwhile to re-implement low-level functions, since we may not need all the steps implemented in a general-purpose library.  We were just too impatient to wait a long I&#x2F;O time until we finish reading a full 10x matrix (&lt;code&gt;.mtx.gz&lt;&#x2F;code&gt;) using either &lt;code&gt;scipy.io.mmread&lt;&#x2F;code&gt; in Python, or &lt;code&gt;Matrix::readMM&lt;&#x2F;code&gt; in R. As the size of the 10x matrix increase more and more, we also discovered there is a numerical limit for R&#x27;s &lt;code&gt;Matrix::readMM&lt;&#x2F;code&gt; (less than two billions non-zero elements) and had to face a similar issue in a low-memory machine, such as a modest 8Gb laptop. So, we did the dirty job of &lt;code&gt;C++&lt;&#x2F;code&gt; implementation. Combined with the indexing scheme, now we can efficiently take a subset of a large matrix stored in a file, not worrying about memory capacity, minimizing the overhead of character parsing and I&#x2F;O.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;we-want-to-focus-on-integrative-data-analysis-across-multiple-data-types-and-modalities&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#we-want-to-focus-on-integrative-data-analysis-across-multiple-data-types-and-modalities&quot; aria-label=&quot;Anchor link for: we-want-to-focus-on-integrative-data-analysis-across-multiple-data-types-and-modalities&quot;&gt;We want to focus on integrative data analysis across multiple data types and modalities&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;With these tools, including the ones under development, we want to do science. We want others to do science using our tools. We will continuously update a bit more complicated routines for convenience, including cell type annotation, data aggregation, cell type deconvolution, batch-balancing k-nearest neighborhood, etc.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Causal Inference in Genomics</title>
        <published>2020-09-04T00:00:00+00:00</published>
        <updated>2020-09-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/causal-bio-2020/"/>
        <id>https://ypark.github.io/posts/causal-bio-2020/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/causal-bio-2020/">&lt;p&gt;TL;DR.  We reinvent traditional bioinformatics methods to ascertain the causality of discoveries made in high-dimensional omics data.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Massive data generation in genomics has transformed the methodology and practice of researches in medicine and human biology. A common practice of research is genomic and functional genomic profiling of hundreds of individuals. If desired data is not available, large consortium-level projects and collaborations can often meet the needs. In terms of both volume and dimensionality, the sizes of genomics data have exploded in the past decade, and it is not hard to predict that the speed of data accumulation will be further accelerated.&lt;&#x2F;p&gt;
&lt;p&gt;Genomics has made a breakthrough in medicine and science, armed with two powerful scientific methods--hypothesis testing and machine learning (ML). Hypothesis testing with well-designed null distributions proves meaningful scientific discoveries are made on the observed data. Likewise, a traditional ML method is designed to efficiently search the most plausible models from a particular class of models, mainly focusing on minimizing generalization errors on the observed data.  However, biology&#x27;s ultimate question is perhaps more about unobserved principles, asking counterfactual &quot;what if&quot; questions, rather than simply describing phenomena. We desire to uncover causal mechanisms and laws underlying observations and ultimately provide testable cause-effect relationships.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;causal-inference-based-on-a-causal-structure-model&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#causal-inference-based-on-a-causal-structure-model&quot; aria-label=&quot;Anchor link for: causal-inference-based-on-a-causal-structure-model&quot;&gt;Causal inference based on a causal structure model&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Most causal inference concepts based on a structural equation model are already adopted in a carefully designed biological experiment. We can trace back to Sewall Wright&#x27;s path diagram model. For instance, an experimental proof demonstrating the effect of a gene &quot;X&quot; to some trait &quot;Y&quot; would require two types of interventions that disruption of the gene X makes changes to the trait Y, and recovery of the gene can attenuate the disrupted functions.  However, a common practice of high-throughput data analysis often lack such intervention steps, but hurriedly arrive at some conclusion based on observed correlation patterns.  Many of these correlations may turn out non-causal but somewhat confounded by unobserved variables.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;identification-of-causal-effects-by-an-instrumental-variable-mediation&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#identification-of-causal-effects-by-an-instrumental-variable-mediation&quot; aria-label=&quot;Anchor link for: identification-of-causal-effects-by-an-instrumental-variable-mediation&quot;&gt;Identification of causal effects by an instrumental variable (mediation)&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;The key concept is an intervention. However, introducing an intervention is often impossible for technical and ethical reasons, and there are so many things to perturb to test the effects. Moreover, the effects of causal mechanisms might be too small to quantify within a reasonable statistical error reliably. How do we ascertain causal effects by intervention?&lt;&#x2F;p&gt;
&lt;p&gt;Stepping back, let us think about two principal axes of the data generation process: the breadth of population-level measurements across tens of thousands of samples and the depth of regulatory genomics across multiple layers of causal mechanisms, seeking a precise answer up to a single-cell resolution.&lt;&#x2F;p&gt;
&lt;p&gt;{{&amp;lt; figure library=&quot;true&quot; src=&quot;project&#x2F;cancer_genomics_research.png&quot; title=&quot;Integrative cancer research builds on two principal axes of genomics data. &lt;strong&gt;(A)&lt;&#x2F;strong&gt; Population-level studies investigate variation across large cohorts. &lt;strong&gt;(B)&lt;&#x2F;strong&gt; Regulatory genomics researches delve into multiple layers of molecular networks.&quot; &amp;gt;}}&lt;&#x2F;p&gt;
&lt;p&gt;We can recognize a causal direction from genetic information to phenotypic variation if we consider that genotypes are shaped by nature’s randomized controlled trial (RCT), or natural interventions. Given that, the goal is to identify causal mediators located in the middle of the above causal diagram. In the context of genome-wide association studies (GWAS), the mediator variables include relevant cell types and target genes derived from tissue-level or cell-type-level eQTL data.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;removing-unwanted-variability-by-control-data&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#removing-unwanted-variability-by-control-data&quot; aria-label=&quot;Anchor link for: removing-unwanted-variability-by-control-data&quot;&gt;Removing unwanted variability by &quot;control&quot; data&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Many scientific discoveries are best represented as a set of contrastive statements, such as &quot;A rather than B&quot; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Peter_Lipton&quot;&gt;Peter Lipton&lt;&#x2F;a&gt;) because such a contrastive explanation clarifies our claim&#x27;s scope and basis. The validity of causal argument can be empirically justified by triangulation of contrastive arguments (Lipton 1991). Therefore, an essential aspect of our research should focus on finding a suitable set of null hypotheses (non-causal facts) to be contrasted against our theory of interest to uphold. What are non-causal effects that may obfuscate the activity of scientific research? Are they generated uniformly at random? In practice, it is hard to characterize non-causal effects without considering confounding variables, and confounders create unwanted non-zero correlations between cause and effect variables.&lt;&#x2F;p&gt;
&lt;p&gt;Confounder correction is a causal inference problem. So, we need to ask the question of identifiability, such as, &quot;How do we know this variable is a confounder?&quot; or &quot;What is a legitimate criterion that distinguishes between causal and non-causal effects?&quot;. We could start our journey by asking:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Are there any control data on which we can safely claim that there is no causal effect whatsoever?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Are they already available&#x2F;observed? Or, should we construct&#x2F;estimate them?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Like many research problems, control data (or variables) are hidden, yet to be estimated. In the mediation problem, for instance, we need to think about how to characterize confounding variables that relate two mediators (genes, M1 and M0) (A) and the other type of confounders between different phenotypes (B). Unless we adjust these confounding effects, mediation effects are not identifiable by statistical inference. Fortunately, we can construct control data that only include non-genetic correlation structures by exploiting human genetics&#x27;s nature. Since genetic correlations are confined within each linkage disequilibrium (LD) block, we can defuse putative causal effects by projecting summary statistics onto a different, independent LD block (C). We actively construct control data to identify confounding variables.&lt;&#x2F;p&gt;
&lt;p&gt;{{&amp;lt; figure library=&quot;true&quot; src=&quot;project&#x2F;mediation_confounder.png&quot; title=&quot;Confounder correction in action. The figure describes essential steps of confounding factor correction in GWAS mediation analysis. &lt;strong&gt;(A)&lt;&#x2F;strong&gt; Type I confounding variable (S1) between mediators (M&#x27;s) &lt;strong&gt;(B)&lt;&#x2F;strong&gt; Type II confounding variable (S2) between phenotypes (Y&#x27;s). &lt;strong&gt;(C)&lt;&#x2F;strong&gt; Joint projection of mediator and phenotype variables makes interventions to remove mediating effect but leave confounding effects.&quot;&amp;gt;}}&lt;&#x2F;p&gt;
&lt;p&gt;On this matter, we are broadly interested in general genomics problems, not just statistical genetics ones.  Although the definition of a confounding variable is problem-specific, we seek to design probabilistic models and ML algorithms that semi-automate the overall process. The methods will indicate a set of putative confounding variables with a level of uncertainty by taking input data and prior knowledge (e.g., known causal and non-causal variables).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-potential-outcome-framework-for-causally-differential-expression-analysis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#a-potential-outcome-framework-for-causally-differential-expression-analysis&quot; aria-label=&quot;Anchor link for: a-potential-outcome-framework-for-causally-differential-expression-analysis&quot;&gt;A potential outcome framework for causally-differential expression analysis&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Recently, our interest in Donald Rubin&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Rubin_causal_model&quot;&gt;potential outcome framework&lt;&#x2F;a&gt; grew, and started thinking about a type of causal problems that can be better approached by Rudin&#x27;s causal model (RCM).&lt;&#x2F;p&gt;
&lt;h4 id=&quot;bayesian-causal-inference-for-single-cell-data-analysis&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bayesian-causal-inference-for-single-cell-data-analysis&quot; aria-label=&quot;Anchor link for: bayesian-causal-inference-for-single-cell-data-analysis&quot;&gt;&quot;Bayesian&quot; causal inference for single-cell data analysis&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;As a first step, we revisit commonly-practised bioinformatics problems and reformulate them in RCMs.  The ultimate goal of RCM is to ask and estimate counterfactual questions.  Causality is tied to an action (doing), rather than an observation (seeing), and counterfactual causal inference seeks to take an impossible action and estimate its effects.&lt;&#x2F;p&gt;
&lt;p&gt;Suppose we want to test the causal statement: A gene expression of Y was changed because of a disease X, i.e., $X \to Y$ with a directed edge (going beyond $Y \sim X$). We define $X$ to take 1 or 0 for &quot;yes&quot; or &quot;no&quot; and the resulting gene expression $Y$ to take a real number. In observational studies, including most high-througput assays, we observe a pair of $X_{i}$ and $Y_{i}$ for an individual $i$; there, the observed $Y_{i}$ value stems from the observed $X_{i}$, either 1 or 0, not both. E.g.,&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: right&quot;&gt;$i$&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;X&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Y(0)&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Y(1)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: right&quot;&gt;1&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;0&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;$Y_1$&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;?&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: right&quot;&gt;2&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;1&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;?&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;$Y_2$&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: right&quot;&gt;3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;1&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;?&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;$Y_3$&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: right&quot;&gt;4&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;0&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;$Y_4$&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;?&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: right&quot;&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;$\vdots$&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;In counterfactual inference, we want to infer the other unobserved and &lt;strong&gt;not&lt;&#x2F;strong&gt; observable cases. For $X_{i}=1$, we want to know the potential outcome of $Y_{i}$ if we had $X_{i} = 0$, and vice versa. RCMs generally translate the underlying problem as a Bayesian imputation problem, or a matrix completion problem, which contains at least 50% of missing values.  Provided an accurate Bayesian imputation method, we can quantify individual-level causal effects, $Y_{i}(1) - Y_{i}(0)$, as well as average causal effects, $\mathbb{E}\left[Y(1) - Y(0)\right]$. This is truly substantial advancement because we no longer worry about identifiability but focus on a statistical inference problem.&lt;&#x2F;p&gt;
&lt;p&gt;Well, there is a catch. In traditional omics data analysis, such an imputation problem is pretty challenging unless we have a good understanding of the data-generating process, which is often a black box to us. For one individual, we only have one data point $Y_{i}$ unless we borrow information from related genes. We might have to rely on faithful pretreatment variables $W$ as in a causal path, $W \to X \to Y$, and construct propensity scores to reweight observed samples.&lt;&#x2F;p&gt;
&lt;p&gt;However, single-cell data provide a unique opportunity for modelling high-dimensional omics profiles. A clear advantage over bulk data is simply that we have more data points per sample (individual).  Assuming that single-cell profiling&#x27;s sensitivity will become better each year, it is not too far until we can achieve reliable and accurate Bayesian imputation methods--not only the observed values but also the counterfactual values.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Bayesian modelling of summary statistics data</title>
        <published>2020-09-03T00:00:00+00:00</published>
        <updated>2020-09-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/summary-data-ml-2020/"/>
        <id>https://ypark.github.io/posts/summary-data-ml-2020/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/summary-data-ml-2020/">&lt;p&gt;TL;DR. We develop Bayesian machine learning methods that excavate a latent structure or underlying joint models of summary statistics data.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;what-are-summary-statistics-data&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#what-are-summary-statistics-data&quot; aria-label=&quot;Anchor link for: what-are-summary-statistics-data&quot;&gt;What are summary statistics data?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;There is no clear boundary to define that data are made available at the summary or observation level.  Suppose the size of a data matrix&#x2F;tensor $Z$ is smaller than the underlying sample size (number of observations). Each element in the data matrix $Z$ is generated as a result of some transformation of raw data. In that case, we often consider that the data $Z$ is observed at the summary level.  Summary statistics data could be first and second-order moments (mean and variance), p-values, z-scores, effect sizes, and standard errors, etc. As the most well-known summary statistics data, we could think of the results of genome-wide association studies (GWAS).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-do-we-bother-summary-statistics&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#why-do-we-bother-summary-statistics&quot; aria-label=&quot;Anchor link for: why-do-we-bother-summary-statistics&quot;&gt;Why do we bother summary statistics?&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The foremost reason is that people feel pretty comfortable with sharing summary statistics. Unlike we have to deal with strict regulations to access individual-level data, a user (researcher) may find easily-downloadable GWAS summary statistics vectors from a public database. For the other party, those who provide data, there is almost no need to anonymize it since each data point does not correspond to an individual. For most clinical and public health studies, research groups share their final results as a giant summary statistics table. Other researchers gain essential knowledge by using them in subsequent research.&lt;&#x2F;p&gt;
&lt;p&gt;Great, but it sounds like everything is done and remains nothing to be done. I just said that summary statistics data are often final to some studies. Yes, to some people, but not to those who care about a generative model involving lots of parameters. Most summary data only investigate relationships between one variable with the other variable, but not many to many. Only a set of marginal probabilities, but not the joint probability of all. Can we recover a joint, multivariate model from a set of univariate models? Taking it further, can we estimate a joint probability of multiple studies conducted independently by different groups by combining summary data collected from each of them?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;summary-based-regression-modelling&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#summary-based-regression-modelling&quot; aria-label=&quot;Anchor link for: summary-based-regression-modelling&quot;&gt;Summary-based regression modelling&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Zhu and Stephens (2017) &lt;a href=&quot;https:&#x2F;&#x2F;pubmed.ncbi.nlm.nih.gov&#x2F;29399241&#x2F;&quot;&gt;PMID: 29399241&lt;&#x2F;a&gt; proposed an interesting idea, termed regression with summary statistics (RSS) model.  RSS recovers the high-dimensional parameters of a multivariate (linear) regression model, highlighting a correspondence between the multivariate and univariate association statistics.&lt;&#x2F;p&gt;
&lt;p&gt;We also found the RSS type of modelling can be effective enough to capture causal SNPs in high-dimensional variable selection problems. Here, we show simulation results on the reference panel genotype matrix (&lt;a href=&quot;https:&#x2F;&#x2F;www.internationalgenome.org&#x2F;&quot;&gt;the 1000 genomes project&lt;&#x2F;a&gt;; on chromosome 1, European samples, n=503). We implemented a suite of related summary-based methods &lt;a href=&quot;https:&#x2F;&#x2F;ypark.github.io&#x2F;zqtl&quot;&gt;zQTL&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;{{&amp;lt; figure library=&quot;true&quot; src=&quot;project&#x2F;summary_regression.png&quot; title=&quot;A summary-based learning method can estimate multivariate parameters as accurate as a traditional Bayesian learning method for a sparse regression problem. &lt;code&gt;AUPRC&lt;&#x2F;code&gt;: Area Under Precision Recall Curve. &lt;em&gt;Column panels&lt;&#x2F;em&gt;: simulations varying the number of causal SNPs. &lt;code&gt;h2&lt;&#x2F;code&gt;: the proportion of phenotypic variance explained by causal SNPs. &lt;code&gt;BSLMM&lt;&#x2F;code&gt;: Bayesian sparse linear mixed effect model; &lt;code&gt;yqtl&lt;&#x2F;code&gt;: a sparse regression model with spike-slab prior, trained by stochastic variational inference; &lt;code&gt;zqtl&lt;&#x2F;code&gt;: a summary-based multivariate regression modelling.&quot;&amp;gt;}}&lt;&#x2F;p&gt;
&lt;h3 id=&quot;summary-statistics-based-machine-learning&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#summary-statistics-based-machine-learning&quot; aria-label=&quot;Anchor link for: summary-statistics-based-machine-learning&quot;&gt;Summary statistics-based machine learning&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Our next challenge is to widen the scope of computational biology, genomics applications that can be benefited from summary-based learning methods. About a decade ago, the ML community also realized the value of exploiting the spectral structure of the summary data matrix&#x2F;tensor. Hsu &lt;em&gt;et al.&lt;&#x2F;em&gt; (2012) &lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;0811.4413&quot;&gt;Hsu+Kakade+Zhang&lt;&#x2F;a&gt; beautifully demonstrates an optimal state of a hidden Markov model can be easily recovered by the spectral decomposition of marginal probability matrices.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
