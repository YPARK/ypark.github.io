<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title></title>
    <link rel="self" type="application/atom+xml" href="https://ypark.github.io/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://ypark.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-09-03T00:00:00+00:00</updated>
    <id>https://ypark.github.io/atom.xml</id>
    <entry xml:lang="en">
        <title>STAT 548 PhD Qualifying Papers</title>
        <published>2024-09-03T00:00:00+00:00</published>
        <updated>2024-09-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/stat548-2024/"/>
        <id>https://ypark.github.io/posts/stat548-2024/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/stat548-2024/">&lt;h2 id=&quot;introduction&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;Introduction&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I am interested in almost all problems in computational biology and genomics. I expect a student to propose novel statistical approaches that can address challenges in data analysis and modelling of high-dimensional, large-volume biological problems.&lt;&#x2F;p&gt;
&lt;p&gt;Feel free to contact me (&lt;code&gt;ypp@stat.ubc.ca&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;format&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#format&quot; aria-label=&quot;Anchor link for: format&quot;&gt;Format&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;You may organize your report including the following sections.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Problem definition&lt;&#x2F;strong&gt; (1 page): Extract mathematical&#x2F;statistical problems from the paper and organize them. What are the input data? What is the expected output?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Significance&lt;&#x2F;strong&gt; (1 paragraph): Why is this an interesting problem? What can be learned by studying this problem? Why is it exciting for you? Author contribution: How did the author(s) find the solution? What was a novel contribution beyond traditional approaches?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Limitations&#x2F;challenges&lt;&#x2F;strong&gt; (1 paragraph): What are the assumptions? Are they realistic? What are the technical limitations that the authors acknowledge or not?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Novel idea&#x2F;methods&lt;&#x2F;strong&gt; (1-2 pages): Propose your idea and statistical methods. You could interpret the underlying problem in a different formulation. What are related problems&#x2F;frameworks, but not adopted by the authors?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Results&lt;&#x2F;strong&gt; (1-2 pages): Include one figure that sketches your approaches. Show tables and figures that clearly demonstrate your methods.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Discussion&lt;&#x2F;strong&gt; (1 page): Briefly discuss what you have learned and what you would achieve if you were to develop this to a full paper. How would you validate your findings in independent studies, including wet-lab experiments?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;available-papers&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#available-papers&quot; aria-label=&quot;Anchor link for: available-papers&quot;&gt;Available Papers&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Bridgeford, E. W., Powell, M., Kiar, G., Noble, S., Chung, J., Panda, S., Lawrence, R., Xu, T., Milham, M., Caffo, B., &amp;amp; Vogelstein, J. T. (2024). &lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1101&#x2F;2021.09.03.458920&quot;&gt;When no answer is better than a wrong answer: a causal perspective on batch effects&lt;&#x2F;a&gt;. In bioRxiv (p. 2021.09.03.458920).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Demirel, I., Alaa, A., Philippakis, A., &amp;amp; Sontag, D. (2024). &lt;a href=&quot;https:&#x2F;&#x2F;proceedings.mlr.press&#x2F;v235&#x2F;demirel24a.html&quot;&gt;Prediction-powered Generalization of Causal Inferences&lt;&#x2F;a&gt;. International Conference on Machine Learning, 10385–10408.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Madrigal, A., Lu, T., Soto, L. M., &amp;amp; Najafabadi, H. S. (2024). &lt;a href=&quot;https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;s41467-024-50963-0&quot;&gt;A unified model for interpretable latent embedding of multi-sample, multi-condition single-cell data&lt;&#x2F;a&gt;. Nature Communications, 15(1), 6573.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Qiu, Y., Sun, J., &amp;amp; Zhou, X.-H. (2023). &lt;a href=&quot;https:&#x2F;&#x2F;www.tandfonline.com&#x2F;doi&#x2F;full&#x2F;10.1080&#x2F;01621459.2023.2252135&quot;&gt;Unveiling the unobservable: Causal inference on multiple derived outcomes&lt;&#x2F;a&gt;. Journal of the American Statistical Association, 1–12.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>New config updates</title>
        <published>2024-08-30T00:00:00+00:00</published>
        <updated>2024-08-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/config-2024/"/>
        <id>https://ypark.github.io/posts/config-2024/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/config-2024/">&lt;h3 id=&quot;emacs-for-rust-with-rustic-and-lsp&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#emacs-for-rust-with-rustic-and-lsp&quot; aria-label=&quot;Anchor link for: emacs-for-rust-with-rustic-and-lsp&quot;&gt;Emacs for Rust with &lt;code&gt;rustic&lt;&#x2F;code&gt; and &lt;code&gt;lsp&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Learning Rust is my personal goal for this year. It is very strict in type checking and memory ownership. So, I needed some help until I could fully grasp its key concepts and syntax. I use Emacs for almost everything, including coding. After an hour of searching, I think I found a pretty good setup (a part of &lt;code&gt;.emacs.d&#x2F;init.el&lt;&#x2F;code&gt;):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;lisp&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-lisp &quot;&gt;&lt;code class=&quot;language-lisp&quot; data-lang=&quot;lisp&quot;&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; Ensure that rust-mode is installed
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; Set the key binding for rust-format-buffer
&lt;&#x2F;span&gt;&lt;span&gt;  (define&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;key rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map &lt;&#x2F;span&gt;&lt;span&gt;(kbd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-f&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;#&amp;#39;rust-format-buffer&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode
&lt;&#x2F;span&gt;&lt;span&gt;  :init
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;#&amp;#39;lsp&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;server &amp;#39;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;analyzer))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;defun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;rk&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook ()
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; so that run C-c C-c C-r works without having to confirm, but don&amp;#39;t try to
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; save rust buffers that are not file visiting. Once
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; https:&#x2F;&#x2F;github.com&#x2F;brotzeit&#x2F;rustic&#x2F;issues&#x2F;253 has been resolved this should
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; no longer be necessary.
&lt;&#x2F;span&gt;&lt;span&gt;  (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;when&lt;&#x2F;span&gt;&lt;span&gt; buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;file&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;name
&lt;&#x2F;span&gt;&lt;span&gt;    (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;local buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;without&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;query &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;before&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;nil t&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; rustic
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure
&lt;&#x2F;span&gt;&lt;span&gt;  :bind (:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt; rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-j&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;ui&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;imenu)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-?&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;references)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c a&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;execute&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;action)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c r&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;rename)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c q&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;workspace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;restart)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c Q&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;workspace&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;shutdown)
&lt;&#x2F;span&gt;&lt;span&gt;              (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-c C-c s&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt; . lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;analyzer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;status))
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; uncomment for less flashiness
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; (setq lsp-eldoc-hook nil)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; (setq lsp-enable-symbol-highlighting nil)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; (setq lsp-signature-auto-activate nil)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rk&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook)
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span&gt;() (flyspell&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;  )
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;rustic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook
&lt;&#x2F;span&gt;&lt;span&gt;          (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            (flycheck&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(rust&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;disable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;save)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;inlay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;enable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; lsp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;ui&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;peek&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;enable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; special&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;names
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;#39;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;*rustic-compilation*&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;setq&lt;&#x2F;span&gt;&lt;span&gt; special&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;function
&lt;&#x2F;span&gt;&lt;span&gt;      (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span&gt;(buffer &amp;amp;optional args)
&lt;&#x2F;span&gt;&lt;span&gt;        (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;window)
&lt;&#x2F;span&gt;&lt;span&gt;        (switch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;to&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer buffer)
&lt;&#x2F;span&gt;&lt;span&gt;        (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;window buffer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; company
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure
&lt;&#x2F;span&gt;&lt;span&gt;  :custom
&lt;&#x2F;span&gt;&lt;span&gt;  (company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;idle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;delay &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0.1&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; how long to wait until popup
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;;; (company-begin-commands nil) ;; uncomment to disable popup
&lt;&#x2F;span&gt;&lt;span&gt;  :bind
&lt;&#x2F;span&gt;&lt;span&gt;  (:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span&gt; company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;active&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;map
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-n&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;next)
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;C-p&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;previous&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-&amp;lt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;first&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;	(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;M-&amp;gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;. company&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;select&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;last&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f07171;&quot;&gt;use-package&lt;&#x2F;span&gt;&lt;span&gt; yasnippet
&lt;&#x2F;span&gt;&lt;span&gt;  :ensure
&lt;&#x2F;span&gt;&lt;span&gt;  :config
&lt;&#x2F;span&gt;&lt;span&gt;  (yas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;reload&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;all)
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;prog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;yas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;minor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode)
&lt;&#x2F;span&gt;&lt;span&gt;  (add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;hook &amp;#39;yas&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;minor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;mode))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Overall, coding Rust is pretty fun, and working with &lt;code&gt;lsp&lt;&#x2F;code&gt;, &lt;code&gt;company&lt;&#x2F;code&gt;, &lt;code&gt;yasnippet&lt;&#x2F;code&gt; can certainly teach me my mistakes interactively. They are quite resource-heavy, but I will need &quot;a tutor&quot; for a while.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fix-unstable-internet&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fix-unstable-internet&quot; aria-label=&quot;Anchor link for: fix-unstable-internet&quot;&gt;Fix unstable Internet&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Working from home for a couple of weeks, I learned that my network is very unstable, especially with the ethernet connection! The problem was my internet service provider is not top-notch, so the download and upload speed shouldn&#x27;t exceed 100mb&#x2F;s, but my ethernet device kept on trying to find better speed but couldn&#x27;t do it. I found a nice solution that the network speed can be simply capped by disabling &lt;code&gt;autoneg&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; lshw&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -C&lt;&#x2F;span&gt;&lt;span&gt; network
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; ethtool&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --change &lt;&#x2F;span&gt;&lt;span&gt;${eth} speed 100 autoneg off
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;fix-display-issues&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#fix-display-issues&quot; aria-label=&quot;Anchor link for: fix-display-issues&quot;&gt;Fix display issues&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Amazon Prime Day got me a new monitor, which is spacious and bulky enough to force me to fold up my laptop screen on my small desk. But I found Ubuntu keeps on activating my laptop screen. I can exclusively switch on my HDMI screen with this command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;xrandr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --output&lt;&#x2F;span&gt;&lt;span&gt; eDP-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --off --output&lt;&#x2F;span&gt;&lt;span&gt; HDMI-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; --primary --auto
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A new config for blogging</title>
        <published>2024-08-01T00:00:00+00:00</published>
        <updated>2024-08-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/posts/zola-setups-2024/"/>
        <id>https://ypark.github.io/posts/zola-setups-2024/</id>
        
        <content type="html" xml:base="https://ypark.github.io/posts/zola-setups-2024/">&lt;p&gt;I&#x27;ve kept on telling my people that researchers should have a way to constantly write out what they think and learn, even though things may turn out to be wrong at some point. I posted &lt;a href=&quot;https:&#x2F;&#x2F;nathanwpyle.threadless.com&#x2F;designs&#x2F;strange-planet-i-have-attempted-science&quot;&gt;this&lt;&#x2F;a&gt; (from Nathan Pyle&#x27;s comic, &quot;Strange Planet&quot;) on my door to remind me of the importance of conveying ideas with evidence. I also believe that paper writing starts at the beginning of any project with a small step at a time. &lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;academic-program&#x2F;write-great-research-paper&#x2F;&quot;&gt;Idea conception, writing a paper, and doing research&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Although I keep my markdown notes and scanned copies of scribbles, I have been searching for a quick and easy way to keep my ideas. First of all,  I was fed up enough with &lt;code&gt;R&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;bookdown&lt;&#x2F;code&gt; and &lt;code&gt;Hugo&lt;&#x2F;code&gt; setup. It was more complex than I would ever need. I have some experience with old web programming, but &lt;code&gt;Hugo&lt;&#x2F;code&gt; was too hard for me. After searching and searching, I found &lt;code&gt;Zola&lt;&#x2F;code&gt; was simple enough, command line friendly, and editor friendly. It also took me some time to figure out, though.&lt;&#x2F;p&gt;
&lt;p&gt;First, install &lt;a href=&quot;https:&#x2F;&#x2F;ypark.github.io&#x2F;posts&#x2F;zola-setups-2024&#x2F;%60https:&#x2F;&#x2F;www.getzola.org&#x2F;%60&quot;&gt;zola&lt;&#x2F;a&gt; locally. More details on installation can be found: &lt;code&gt;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;installation&#x2F;&lt;&#x2F;code&gt; and some web search.&lt;&#x2F;p&gt;
&lt;p&gt;Then, we can set up a new &lt;code&gt;zola&lt;&#x2F;code&gt; directory:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; init ${BLOG}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here, &lt;code&gt;${BLOG}&lt;&#x2F;code&gt; can be any working directory.&lt;&#x2F;p&gt;
&lt;p&gt;I was too lazy to tweak HTML pages and styles, so I decide to use &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;themes&#x2F;apollo&#x2F;&quot;&gt;Apollo theme&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; submodule add https:&#x2F;&#x2F;github.com&#x2F;not-matthias&#x2F;apollo themes&#x2F;apollo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;or simply clone:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;not-matthias&#x2F;apollo themes&#x2F;apollo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Out of the box, things work fine, but it&#x27;s worth customizing &lt;code&gt;config.toml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;apollo&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;taxonomies &lt;&#x2F;span&gt;&lt;span&gt;= [{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;tags&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;}]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# The URL the site will be built for
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;base_url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CHANGE ME&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Whether to automatically compile all Sass files in the sass directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;compile_sass &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Whether to build a search index to be used later on by a JavaScript library
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;build_search_index &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;output_dir &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;CHANGE ME&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;generate_feeds &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Whether to do syntax highlighting
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# Theme can be customised by setting the `highlight_theme` variable to a theme supported by Zola
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;highlight_code &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;highlight_theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ayu-light&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;extra&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#abb0b6;&quot;&gt;# See this for more options: https:&#x2F;&#x2F;github.com&#x2F;not-matthias&#x2F;apollo&#x2F;blob&#x2F;main&#x2F;config.toml#L14
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;toc &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;use_cdn &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;theme &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;toggle&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;socials &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;menu &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;mathjax &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;mathjax_dollar_inline_enable &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;fancy_code &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;insert_anchor_links &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;heading&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;favicon &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;&#x2F;icon&#x2F;favicon.ico&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, we can create &lt;code&gt;_index.md&lt;&#x2F;code&gt; as a front page:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;emacs&lt;&#x2F;span&gt;&lt;span&gt; content&#x2F;_index.md
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;_index.md&lt;&#x2F;code&gt; could be something like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;title= &amp;quot;my blog&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;template = &amp;quot;homepage.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Welcome to my blog
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can ask &lt;code&gt;zola&lt;&#x2F;code&gt; to generate HTML and &lt;code&gt;js&lt;&#x2F;code&gt; pages:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A new site will be located under where the &lt;code&gt;output_dir&lt;&#x2F;code&gt; is pointing to. We can simply push the entire directory to &lt;code&gt;GitHub&lt;&#x2F;code&gt; or a similar kind.&lt;&#x2F;p&gt;
&lt;p&gt;Every time we need to update, we can create a new &#x27;md&#x27; file under &#x27;content&#x27; where different. To have a handle to a new set of posts, we need to add a new menu item in &lt;code&gt;config.toml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;menu = [
&lt;&#x2F;span&gt;&lt;span&gt;    { name = &amp;quot;&#x2F;posts&amp;quot;, url = &amp;quot;&#x2F;posts&amp;quot;, weight = 1 },
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In &lt;code&gt;content&#x2F;posts&#x2F;&lt;&#x2F;code&gt;, we can add &lt;code&gt;_index.md&lt;&#x2F;code&gt; to help navigate posts:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#61676c;&quot;&gt;&lt;code&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;span&gt;paginate_by = 7
&lt;&#x2F;span&gt;&lt;span&gt;title = &amp;quot;Posts&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;sort_by = &amp;quot;date&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;insert_anchor_links = &amp;quot;heading&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;+++
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Happy blogging!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yi-Ting(Tina) Hsu</title>
        <published>2024-07-01T00:00:00+00:00</published>
        <updated>2024-07-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/tina0420/"/>
        <id>https://ypark.github.io/team/tina0420/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/tina0420/">&lt;p&gt;I am currently a PhD student in Bioinformatics graduate program and interested in developing algorithms for innovating applications in the fields of medicine and biology. Not only coding, I also like to explore new sights of biology, especially about cancers.&lt;&#x2F;p&gt;
&lt;p&gt;interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Data Science&lt;&#x2F;li&gt;
&lt;li&gt;Machine Learning&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pattie Ye</title>
        <published>2024-05-31T00:00:00+00:00</published>
        <updated>2024-05-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/alumni/pattieye/"/>
        <id>https://ypark.github.io/alumni/pattieye/</id>
        
        <content type="html" xml:base="https://ypark.github.io/alumni/pattieye/">&lt;p&gt;I was a Master’s student in Bioinformatics starting in Fall 2021 under the co-supervision of Dr. Yongjin Park and &lt;a href=&quot;https:&#x2F;&#x2F;www.bcchr.ca&#x2F;rklein-geltink&quot;&gt;Dr. Ramon Klein Geltink&lt;&#x2F;a&gt;. I completed my BSc from the University of British Columbia in 2021 with a combined major in Computer Science and Statistics. My main research interests pertain to studying the underlying biological mechanisms of autoimmune and inflammatory disease using large scale data analysis.&lt;&#x2F;p&gt;
&lt;p&gt;Outside of academia, I am a member of the Varsity Men’s Rowing team at UBC as a coxswain. I served as rowing team captain for two years and have won two national championships. I also enjoy cooking, reading, and taking care of houseplants.&lt;&#x2F;p&gt;
&lt;p&gt;Research interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Statistical Genomics&lt;&#x2F;li&gt;
&lt;li&gt;Complex Disease&lt;&#x2F;li&gt;
&lt;li&gt;Autoimmune and Inflammatory Disease&lt;&#x2F;li&gt;
&lt;li&gt;Immunometabolism&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yichen Zhang</title>
        <published>2024-05-31T00:00:00+00:00</published>
        <updated>2024-05-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/alumni/yichen/"/>
        <id>https://ypark.github.io/alumni/yichen/</id>
        
        <content type="html" xml:base="https://ypark.github.io/alumni/yichen/">&lt;p&gt;I was a Ph.D. student in the Department of Statistics. I employ techniques from deep learning and bayesian statistics to shed light on the mechanism of complex human diseases. I am generally interested in developing interpretable and scalable algorithms to uncover the underlying structure of biological data. Before that, I obtained my Master’s Degree in Biostatistics from the University of Washington, working on matrix completion and cell type deconvolution problems with Noah Simon.&lt;&#x2F;p&gt;
&lt;p&gt;Besides research, I am a food enthusiast. I love cooking, exploring local restaurants, watching food &amp;amp; cooking documentaries and brewing coffee and tea. I do weight training from time to time so that I can enjoy more food.&lt;&#x2F;p&gt;
&lt;p&gt;Research interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Bayesian Statistics&lt;&#x2F;li&gt;
&lt;li&gt;Deep Learning&lt;&#x2F;li&gt;
&lt;li&gt;Graphical Model&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yaoyue (Yolanda) Feng</title>
        <published>2024-05-01T00:00:00+00:00</published>
        <updated>2024-05-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/yaoyue/"/>
        <id>https://ypark.github.io/team/yaoyue/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/yaoyue/">&lt;p&gt;I hope to use the combination of bioinformatics and traditional biological experiments to explore the disease progression and drug resistance in Acute Myeloid Leukemia, in order to help more clinical patients. I obtained my Master of Research Degree in Cancer Biology from Imperial College London, working on Hepatocellular Carcinoma under hypoxia condition. And I studied cisplatin resistance in Ovarian Cancer at Sichuan University during my undergraduate stage.&lt;&#x2F;p&gt;
&lt;p&gt;In my spare time, I prefer to stay at home watching movies or cooking instead of outdoor activities. I only go out with my friends when the weather is really nice. I also like basketball, but I watch it more often than I play it myself.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Maxwell Douglas</title>
        <published>2024-01-15T00:00:00+00:00</published>
        <updated>2024-01-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/genomaxx/"/>
        <id>https://ypark.github.io/team/genomaxx/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/genomaxx/">&lt;p&gt;Hi! I&#x27;m a computational biologist passionate about the intersection of software, analytics, and biologic&#x2F;medical data. I love talking shop about the how, when, and why of deriving insights from data. My research background is heavy in the various &#x27;omics&#x27; technologies with a particular focus on genomics.&lt;&#x2F;p&gt;
&lt;p&gt;interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Computational Oncology&lt;&#x2F;li&gt;
&lt;li&gt;Open-source software&lt;&#x2F;li&gt;
&lt;li&gt;Causal Inference&lt;&#x2F;li&gt;
&lt;li&gt;Data-Science&lt;&#x2F;li&gt;
&lt;li&gt;Translational Science&lt;&#x2F;li&gt;
&lt;li&gt;Public Health&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hobbies:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Trail Running&lt;&#x2F;li&gt;
&lt;li&gt;Soccer&lt;&#x2F;li&gt;
&lt;li&gt;Skiing&lt;&#x2F;li&gt;
&lt;li&gt;Climbing&lt;&#x2F;li&gt;
&lt;li&gt;Backpacking&#x2F;hiking&lt;&#x2F;li&gt;
&lt;li&gt;DND&lt;&#x2F;li&gt;
&lt;li&gt;Volunteering &amp;amp; community-building&#x2F;outreach&lt;&#x2F;li&gt;
&lt;li&gt;Struggling to keep house-plants alive&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ming Yuan</title>
        <published>2022-09-01T00:00:00+00:00</published>
        <updated>2022-09-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/ming/"/>
        <id>https://ypark.github.io/team/ming/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/ming/">&lt;p&gt;I am a PhD student in Biostatistics at UBC. Before this ongoing MSc&#x2F;PhD experience, I completed my BSc degree at Sun Yat-sen University, China, majoring in Statistics in 2020. My main research interests are causal inference and its application to genomic data.&lt;&#x2F;p&gt;
&lt;p&gt;interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Variable selection&lt;&#x2F;li&gt;
&lt;li&gt;Causal inference&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Sam Khalilitousi</title>
        <published>2022-01-31T00:00:00+00:00</published>
        <updated>2022-01-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/alumni/samtoussi/"/>
        <id>https://ypark.github.io/alumni/samtoussi/</id>
        
        <content type="html" xml:base="https://ypark.github.io/alumni/samtoussi/">&lt;p&gt;I have always been intrigued by the ever-growing biological insights that are made possible with computers. This led me to pursue Biomedical Engineering (specializing in Cellular Bioengineering) at UBC, where I have been gaining experience in machine learning and bioinformatics analysis. With a passion centred in machine learning and computational biology, I want to use creativity to help make novel discoveries. Looking forward to connecting and collaborating with the team at the Park Lab!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;samktt.github.io&#x2F;sam&#x2F;&quot;&gt;https:&#x2F;&#x2F;samktt.github.io&#x2F;sam&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Kevin Lam</title>
        <published>2022-01-15T00:00:00+00:00</published>
        <updated>2022-01-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/lamke07/"/>
        <id>https://ypark.github.io/team/lamke07/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/lamke07/">&lt;p&gt;I am a Statistics PhD student, supervised by Dr. Yongjin Park and &lt;a href=&quot;https:&#x2F;&#x2F;www.stat.ubc.ca&#x2F;~benbr&#x2F;&quot;&gt;Dr. Benjamin Bloem-Reddy&lt;&#x2F;a&gt;. I am mainly interested in applying and developing methods that help characterize underlying structures in biological data sets, for example using causal inference. Before the start of the PhD, I spent a year as a research assistant at the MRC Centre for Global Infectious Disease Analysis at Imperial College London where I collaborated with the Malawi Ministry of Health. Our team provided HIV modelling tools to support stakeholders with their policy decisions such as selecting new locations for health facilities for people living with HIV. During my MSc studies, I also worked on identifying the origins of drug resistant malaria in South East Asia using community detection in network analysis.&lt;&#x2F;p&gt;
&lt;p&gt;Outside of my studies, I enjoy watching movies or discovering new restaurants. I also play the piano from time to time when the opportunity arises.&lt;&#x2F;p&gt;
&lt;p&gt;Research interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Causal Inference&lt;&#x2F;li&gt;
&lt;li&gt;Computational Biology&lt;&#x2F;li&gt;
&lt;li&gt;Machine Learning&lt;&#x2F;li&gt;
&lt;li&gt;Public Health&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Wanxin Li</title>
        <published>2021-09-01T00:00:00+00:00</published>
        <updated>2021-09-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/wanxinli/"/>
        <id>https://ypark.github.io/team/wanxinli/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/wanxinli/">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Co-supervised by &lt;a href=&quot;https:&#x2F;&#x2F;kdaoduc.com&#x2F;&quot;&gt;Khanh Dao Duc&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Interests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Computational biology&lt;&#x2F;li&gt;
&lt;li&gt;Single cell problems&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Sishir Subedi</title>
        <published>2021-01-01T00:00:00+00:00</published>
        <updated>2021-01-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/sishir/"/>
        <id>https://ypark.github.io/team/sishir/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/sishir/">&lt;p&gt;I am a Ph.D. student in the Department of Bioinformatics. I am interested in developing computational methods to understand the dynamics of cancer genomes. Mainly, I am fascinated by the interplay between the genomic architecture and the adaptive mechanisms of tumor cells in their heterogeneous microenvironment.&lt;&#x2F;p&gt;
&lt;p&gt;Previously, I worked as a bioinformatician where I was involved in developing bioinformatics platforms for oncology diagnostics assays. During this time, pondering at clinical NGS data, I appreciated the importance of untangling DNA sequences and how it translates to helping a hopeful cancer patient. Also, I realized that each patient is unique, so is each cell, and I am excited to learn more about them- one cell at a time. I couldn&#x27;t agree more with what Aristotle famously wrote, &quot;The more you know, the more you realize you don&#x27;t know.&quot;&lt;&#x2F;p&gt;
&lt;p&gt;While offline, I am up for anything outdoor. I like visiting new places, hiking hills, and kayaking.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Yongjin P Park</title>
        <published>2020-09-20T00:00:00+00:00</published>
        <updated>2020-09-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://ypark.github.io/team/ypp/"/>
        <id>https://ypark.github.io/team/ypp/</id>
        
        <content type="html" xml:base="https://ypark.github.io/team/ypp/">&lt;p&gt;I have been an assistant professor in Pathology and Laboratory Medicine, as well as Statistics at &lt;a href=&quot;https:&#x2F;&#x2F;www.ubc.ca&quot;&gt;UBC&lt;&#x2F;a&gt;. I hold &lt;a href=&quot;https:&#x2F;&#x2F;www.chairs-chaires.gc.ca&#x2F;chairholders-titulaires&#x2F;profile-eng.aspx?profileId=5758&quot;&gt;Canada Research Chair Tier-2&lt;&#x2F;a&gt;. My research primarily focuses on developing scalable probabilistic inference methods to elucidate hidden causal mechanisms of human diseases, such as cancer and other common&#x2F;complex disorders.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;&#x2F;em&gt;: I started adding &quot;P&quot; as a middle initial since 2020 to avoid confusion with many other researchers with the same first and last name. &quot;P&quot; may be anything among &quot;Probably,&quot; &quot;Peter,&quot; &quot;Projecting,&quot; etc.&lt;&#x2F;p&gt;
&lt;p&gt;Besides research, I love cooking while trying out different types of cuisines and recipes. I also like to watch history documentaries and films and read books on history. When I was young, I used to play Starcraft and practice hip-hop dance, but I gave them up once I realized that the joy of coding and doing science exceeded and was more rewarding to me.&lt;&#x2F;p&gt;
&lt;!-- education: --&gt;
&lt;!--   courses: --&gt;
&lt;!--   - course: PhD in Biomedical Engineering --&gt;
&lt;!--     institution: Johns Hopkins University --&gt;
&lt;!--     year: 2014 --&gt;
&lt;!--   - course: MSc in Computational Biology --&gt;
&lt;!--     institution: Carnegie Mellon University --&gt;
&lt;!--     year: 2008 --&gt;
&lt;!--   - course: BSc in Biology and Computater Science and Engineering --&gt;
&lt;!--     institution: Seoul National University --&gt;
&lt;!--     year: 2006 --&gt;
&lt;!-- email: &quot;yongjin.park@ubc.ca&quot; --&gt;
&lt;!-- interests: --&gt;
&lt;!-- - Bayesian statistics --&gt;
&lt;!-- - Causal inference --&gt;
&lt;!-- - Computational Biology --&gt;
&lt;!-- - Network science --&gt;
&lt;!-- - Single-cell genomics --&gt;
&lt;!-- organizations: --&gt;
&lt;!-- - name: University of British Columbia --&gt;
&lt;!--   url: &quot;https:&#x2F;&#x2F;www.ubc.ca&#x2F;&quot; --&gt;
&lt;!-- role: Assistant Professor of Pathology and Statistics --&gt;
&lt;!-- social: --&gt;
&lt;!-- - icon: twitter --&gt;
&lt;!--   icon_pack: fab --&gt;
&lt;!--   link: https:&#x2F;&#x2F;twitter.com&#x2F;ypp_lab --&gt;
&lt;!-- - icon: github --&gt;
&lt;!--   icon_pack: fab --&gt;
&lt;!--   link: https:&#x2F;&#x2F;github.com&#x2F;ypark --&gt;
&lt;!-- superuser: true --&gt;
&lt;!-- title: Yongjin Park --&gt;
&lt;!-- user_groups: [&quot;Principal Investigator&quot;] --&gt;
</content>
        
    </entry>
</feed>
